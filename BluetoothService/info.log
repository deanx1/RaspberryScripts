[2019-10-01 13:22:34,477] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 13:22:34,478] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 13:26:04,319] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 13:26:04,322] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 13:26:04,323] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fe4f4ba7810>
[2019-10-01 13:26:04,324] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 13:26:04,325] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 13:26:04,326] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 13:33:58,251] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-01 13:33:58,251] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-01 13:33:58,251] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-01 13:33:58,252] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-01 13:51:06,418] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-01 13:51:06,418] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-01 13:51:06,418] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-01 13:51:06,419] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-01 13:51:41,712] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 13:51:41,713] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:03:59,685] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:03:59,686] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:03:59,686] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:03:59,687] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:03:59,687] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:08:39,969] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 14:08:39,971] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 14:08:39,973] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc21e678810>
[2019-10-01 14:08:39,974] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 14:08:39,975] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 14:08:39,976] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:08:40,898] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:08:40,898] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:09:53,037] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 14:09:53,039] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd0a5c6e810>
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 14:09:53,041] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:09:56,444] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-08 13:26:27,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:26:27,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:27:11,437] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:27:15,304] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:27:15,305] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:27:15,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:27:15,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:27:15,307] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:27:15,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:27:15,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:27:15,309] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:27:15,310] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:27:15,311] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:27:15,312] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:27:15,312] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:27:15,313] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (16, 'Device or resource busy')
[2019-10-08 13:27:15,316] : [ERROR] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Failed to load content from the text.json
Traceback (most recent call last):
  File "bleClient.py", line 90, in readJsonFile
    jsonFileObj = open(self.lsonFile,"r")
AttributeError: bleClient instance has no attribute 'lsonFile'
[2019-10-08 13:27:15,318] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:27:15,318] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:27:15,319] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 13:27:15,321] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:27:28,368] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:27:28,368] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:27:53,156] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:27:53,160] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:31:41,027] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:31:41,027] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:32:41,484] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:32:41,486] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:32:41,486] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:32:41,487] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:32:41,488] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:32:41,488] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:32:41,489] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:32:41,489] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:32:41,490] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (16, 'Device or resource busy')
[2019-10-08 13:32:41,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ffb58e76780>
[2019-10-08 13:32:41,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:32:41,492] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:32:58,459] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:32:58,459] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:33:02,622] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:33:02,626] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:33:08,750] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:33:08,750] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:34:09,830] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:34:09,831] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:34:09,832] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:34:09,832] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:34:09,833] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:34:09,834] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:34:09,834] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:34:09,835] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:34:09,835] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:34:09,836] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:34:09,837] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:34:09,838] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:34:13,469] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:34:13,470] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f19d0b25780>
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:34:13,972] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:34:13,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:38:08,761] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:38:08,761] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:38:19,124] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:38:29,382] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 13:38:29,383] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 13:38:29,385] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:40:35,269] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:40:35,269] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:41:36,657] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:41:36,659] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:41:36,659] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:41:36,972] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:41:36,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff635439780>
[2019-10-08 13:41:36,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:41:36,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:41:36,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:41:37,476] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:41:37,476] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:42:23,056] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:42:23,056] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:43:10,502] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:43:10,503] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:43:10,504] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:43:10,505] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:43:10,506] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:43:10,507] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:43:10,507] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:43:10,508] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:43:10,509] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:43:10,510] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:43:10,510] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:43:10,511] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4db488e780>
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:43:14,859] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:43:15,360] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:43:15,361] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:47:23,895] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:47:23,895] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:48:04,927] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:48:04,930] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:48:06,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:48:06,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:48:52,521] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:49:42,726] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:49:42,727] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:49:42,728] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:49:42,729] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:49:42,730] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:49:42,731] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:49:42,733] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:49:42,734] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:49:42,736] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:49:42,738] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:49:42,745] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:49:42,746] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe728554780>
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:49:42,945] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:49:43,445] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:49:43,446] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:08:11,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:08:11,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:09:06,804] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 14:09:06,805] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 14:09:06,806] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 14:09:06,807] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 14:09:06,808] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 14:09:06,809] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 14:09:06,810] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 14:09:06,811] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 14:09:06,812] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 14:09:06,814] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 14:09:06,815] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:09:06,816] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 14:09:06,945] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (111, 'Connection refused')
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb36ac78780>
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 14:09:06,946] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:09:52,383] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:09:52,384] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:10:00,397] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:11:54,555] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:11:54,559] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:12:00,072] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:12:00,072] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:13:13,968] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:13:37,541] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 14:13:37,542] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 14:13:37,543] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 14:13:37,544] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 14:13:37,544] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 14:13:37,545] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 14:13:37,546] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 14:13:37,547] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 14:13:37,547] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 14:13:37,548] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 14:13:37,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:13:37,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 14:13:37,678] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (111, 'Connection refused')
[2019-10-08 14:13:37,681] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f607e3be780>
[2019-10-08 14:13:37,682] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 14:13:37,683] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 14:13:37,683] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 14:13:37,684] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 14:13:37,685] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:28:28,232] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:28:28,232] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:29:06,526] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:29:06,530] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:29:24,029] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:29:24,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:31:10,020] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:32:48,625] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:32:48,627] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:32:48,630] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:33:56,915] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:33:56,916] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:35:35,337] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:37:16,645] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:37:16,646] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:37:16,648] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:38:23,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:38:23,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:40:02,839] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:41:40,804] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:41:40,806] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:41:40,808] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:42:51,884] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:42:51,885] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:44:28,740] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:45:00,721] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:45:00,724] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:47:16,689] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:47:16,689] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:48:54,791] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:49:57,064] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:49:57,066] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:49:57,067] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:00:38,558] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:00:38,558] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:00:38,558] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:00:38,559] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:00:44,496] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:01:13,374] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:01:13,374] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:01:13,374] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:01:13,375] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:01:33,934] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:01:33,934] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:02:25,988] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:03:18,751] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 15:03:18,751] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 15:03:18,752] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:03:50,584] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:03:50,584] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:04:23,220] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 15:04:23,223] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:10:19,597] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:10:19,597] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:11:17,574] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:12:22,608] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 15:12:22,610] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 15:12:22,613] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:22:12,978] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:22:12,978] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:23:10,177] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:23:19,109] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:23:19,110] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 11:58:42,868] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 11:58:42,869] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 11:59:04,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 11:59:25,313] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 11:59:25,314] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 11:59:25,319] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:33:56,598] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:33:56,598] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:34:16,413] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:34:39,404] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:34:39,405] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:34:39,405] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:41:39,240] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:41:39,240] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:41:58,528] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:42:17,427] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:42:17,428] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:42:17,431] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:42:56,996] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:42:56,997] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:43:05,336] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-09 12:43:05,341] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:43:27,783] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:43:27,783] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:43:44,649] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:44:02,049] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:44:02,051] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:44:02,055] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:53:29,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:53:29,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:53:47,520] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:54:05,554] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:54:05,555] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:54:05,556] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:54:14,651] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:54:14,651] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:54:32,297] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:54:50,247] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:54:50,248] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:54:50,250] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:58:11,586] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:58:11,587] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:58:28,840] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:58:47,048] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:58:47,049] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:58:47,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:16:31,911] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:16:31,911] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:16:51,400] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 13:17:10,859] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 13:17:10,860] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 13:17:10,862] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:17:23,552] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:17:23,552] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:17:46,923] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-09 13:17:46,926] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:20:59,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:20:59,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:21:18,915] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 13:21:39,263] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 13:21:39,265] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 13:21:39,267] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:23:18,185] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:23:18,186] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:23:33,164] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 13:23:33,165] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 13:23:33,166] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 13:23:33,167] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 13:23:33,168] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 13:23:33,169] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 13:23:33,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 13:23:33,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 13:23:33,171] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 13:23:33,173] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 13:23:33,173] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:23:33,174] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 13:23:34,087] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 13:23:34,089] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb41285b780>
[2019-10-09 13:23:34,090] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 13:23:34,091] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 13:23:34,091] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 13:23:34,593] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 13:23:34,593] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 13:25:34,053] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:25:34,053] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:26:08,790] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-09 13:26:08,794] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:26:18,035] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:26:18,035] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:26:33,847] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 13:26:33,848] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 13:26:33,848] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 13:26:33,849] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 13:26:33,849] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 13:26:33,850] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 13:26:33,850] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 13:26:33,851] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 13:26:33,852] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 13:26:33,852] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 13:26:33,853] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:26:33,853] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fa64da0f780>
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 13:26:34,703] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 13:26:34,703] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 13:26:35,204] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 13:26:35,206] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 15:07:21,641] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:07:21,642] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:07:37,102] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 15:08:03,921] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 15:08:03,922] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 15:08:03,923] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:08:06,371] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:08:06,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:08:27,012] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 15:08:27,013] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 15:08:27,013] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 15:08:27,016] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 15:08:27,016] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:08:27,017] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 15:08:31,896] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 15:08:31,897] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5216d9e780>
[2019-10-09 15:08:31,898] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 15:08:31,899] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 15:08:31,900] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 15:08:32,401] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 15:08:32,402] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 15:11:59,474] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:11:59,474] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:12:07,201] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 15:12:26,389] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 15:12:26,390] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 15:12:26,391] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 15:12:26,391] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 15:12:26,392] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 15:12:26,393] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 15:12:26,394] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 15:12:26,395] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 15:12:26,396] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 15:12:26,396] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 15:12:26,397] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:12:26,398] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 15:12:27,119] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 15:12:27,120] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f8dc27e8780>
[2019-10-09 15:12:27,121] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 15:12:27,121] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 15:12:27,122] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 15:12:27,624] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 15:12:27,625] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 11:46:53,180] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 11:46:53,181] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 11:46:58,620] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 11:46:58,627] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 11:50:00,518] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 11:50:00,518] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 11:50:29,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 11:50:29,493] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 11:50:29,493] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 11:50:29,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 11:50:29,495] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 11:50:29,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 11:50:29,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 11:50:29,497] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 11:50:29,498] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 11:50:29,499] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-15 11:50:29,499] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 11:50:29,500] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 11:50:34,523] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 11:50:34,524] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc065ebc780>
[2019-10-15 11:50:34,526] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 11:50:34,527] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 11:50:34,527] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 11:50:35,028] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 11:50:35,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 12:24:59,560] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:24:59,560] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:25:26,707] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-15 12:25:30,344] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 12:25:30,347] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 12:26:54,706] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:26:54,706] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 12:27:35,444] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 12:27:35,445] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f316f8c8780>
[2019-10-15 12:27:35,446] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 12:27:35,447] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 12:27:35,448] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 12:27:35,950] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 12:27:35,950] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 12:33:55,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:33:55,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:33:59,639] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 12:33:59,643] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:08,071] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 13:03:08,071] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 13:03:08,072] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 13:03:08,072] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 13:03:08,072] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 13:03:14,991] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 13:03:14,993] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 13:03:14,995] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8497e5f810>
[2019-10-15 13:03:14,996] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 13:03:14,997] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 13:03:14,997] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 13:03:21,293] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:21,293] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:24,146] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:24,151] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:44,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:44,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:47,872] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:47,877] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:56,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:56,031] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:59,257] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:59,262] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 14:51:51,785] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-15 14:51:51,785] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 14:52:24,861] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 14:52:24,863] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 14:52:24,865] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 14:52:24,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 14:52:24,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 14:52:24,867] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 14:52:24,868] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 14:52:24,869] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 14:52:24,869] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 14:52:24,870] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Description	: None
[2019-10-15 14:52:24,871] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 14:52:24,872] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 14:52:26,701] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 14:52:26,702] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0047238780>
[2019-10-15 14:52:26,702] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 14:52:26,703] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 14:52:26,703] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 14:52:27,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 14:52:27,205] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 14:57:00,052] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 14:57:26,593] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 14:57:26,595] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 14:57:26,596] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f47d7d49810>
[2019-10-15 14:57:26,597] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 14:57:26,598] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 14:57:26,598] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:04:30,213] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:04:30,213] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:04:30,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:04:30,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:04:30,214] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 15:07:39,784] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 15:07:39,787] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 15:07:39,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f27930b7810>
[2019-10-15 15:07:39,790] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 15:07:39,791] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 15:07:39,791] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:08:00,991] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:08:00,991] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:08:00,992] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:08:00,992] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:08:00,992] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 15:21:41,343] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 15:21:41,346] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 15:21:41,348] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4059a2c810>
[2019-10-15 15:21:41,349] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 15:21:41,350] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 15:21:41,351] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:29:16,622] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:29:16,623] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 18:59:48,163] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 18:59:48,163] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f44dd5d3810>
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 18:59:48,164] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:06:03,064] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:06:03,065] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-16 13:10:59,330] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:10:59,332] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:10:59,335] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f566f751810>
[2019-10-16 13:10:59,336] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:10:59,337] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:10:59,338] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:14:35,677] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:14:35,678] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-16 13:17:51,374] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:17:51,377] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:17:51,382] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7feef68c1810>
[2019-10-16 13:17:51,383] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:17:51,385] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:17:51,386] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:33:03,421] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:33:03,422] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:33:10,253] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:33:10,260] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:33:10,263] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fab66ec9810>
[2019-10-16 13:33:10,264] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:33:10,265] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:33:10,266] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:33:56,743] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:34:27,842] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 13:34:27,886] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 13:34:27,887] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 13:34:27,888] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8d428dd810>
[2019-10-16 13:34:27,889] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:34:27,890] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:34:27,891] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:44:56,135] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:44:56,135] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:45:02,697] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:45:02,698] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f39d4100810>
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:45:02,699] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:48:19,200] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:48:19,200] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:49:05,480] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:49:05,484] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:49:05,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fdfd447c810>
[2019-10-16 13:49:05,488] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:49:05,490] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:49:05,491] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:49:57,342] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:49:57,344] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:50:31,231] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:50:31,236] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:50:31,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbf2da2a810>
[2019-10-16 13:50:31,239] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:50:31,240] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:50:31,241] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:52:19,092] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:52:45,108] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 13:52:45,166] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 13:52:45,167] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 13:52:45,169] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f5a90005810>
[2019-10-16 13:52:45,171] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:52:45,172] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:52:45,175] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:04:46,938] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:04:46,938] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:04:46,939] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:04:46,939] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:04:46,939] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:06:08,378] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:06:08,383] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:06:08,385] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:06:08,388] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:06:09,470] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:06:09,470] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:06:09,471] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:06:09,471] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:06:09,471] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:08:44,578] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:08:44,582] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:08:44,584] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:08:44,586] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:12:35,736] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:12:35,736] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:19:58,558] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:19:58,561] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:19:58,563] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:19:58,565] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:20:34,703] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:20:34,703] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:20:34,704] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:20:34,704] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:20:34,704] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:23:28,169] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:23:28,171] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:23:28,173] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:23:28,174] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:23:28,948] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:23:28,948] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:23:28,949] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:23:28,949] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:23:28,949] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:31:52,693] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:31:52,697] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:31:52,699] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:31:52,701] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:31:53,452] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:31:55,545] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:31:55,549] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:31:55,551] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fcf7d675810>
[2019-10-16 14:31:55,552] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:31:55,553] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:31:55,554] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:32:44,766] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:32:58,113] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:32:58,118] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:32:58,120] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7b5408a810>
[2019-10-16 14:32:58,122] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:32:58,123] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:32:58,123] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:32:58,972] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:32:58,974] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:35:17,577] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:35:17,578] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f999fa25810>
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:35:17,579] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:35:19,239] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:36:34,252] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:36:34,295] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:36:34,297] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:36:34,298] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc155e5a810>
[2019-10-16 14:36:34,299] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:36:34,300] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:36:34,301] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:37:26,575] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:37:26,575] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:37:45,576] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:37:45,657] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:37:45,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:37:45,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc2813b9810>
[2019-10-16 14:37:45,661] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:37:45,662] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:37:45,664] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:40:17,228] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:40:17,228] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:40:47,686] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:40:47,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:40:47,745] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:40:47,747] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fda89d9c810>
[2019-10-16 14:40:47,748] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:40:47,749] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:40:47,750] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:42:19,873] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:42:19,873] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:42:37,360] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:42:37,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:42:37,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:42:37,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4106bc5810>
[2019-10-16 14:42:37,426] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:42:37,426] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:42:37,427] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 15:17:37,029] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 15:18:02,223] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 15:18:02,258] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 15:18:02,260] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7efc99318810>
[2019-10-16 15:18:02,261] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 15:18:02,262] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 15:18:02,263] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 15:26:22,202] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 15:26:51,177] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 15:26:51,313] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 15:26:51,314] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 15:26:51,315] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f654c6fd810>
[2019-10-16 15:26:51,317] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 15:26:51,318] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 15:26:51,319] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-29 15:30:51,564] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-29 15:30:51,565] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-29 15:30:51,566] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-29 15:30:51,567] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-29 15:30:51,568] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-29 15:32:05,235] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-29 15:32:05,358] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-29 15:32:05,359] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-29 15:32:05,361] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f726c4b9810>
[2019-10-29 15:32:05,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-29 15:32:05,363] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-29 15:32:05,364] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-29 18:32:47,983] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-29 18:32:47,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-29 18:33:01,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-29 18:33:12,766] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-29 18:33:12,767] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 59, in getBluetoothServices
    if not bleService: raise SystemExit(), None
SystemExit
[2019-10-29 18:33:12,770] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-29 18:43:14,272] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-29 18:43:14,272] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-29 18:43:25,790] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-29 18:43:38,756] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-29 18:43:38,769] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:00:48,689] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:01:10,748] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:01:10,785] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:01:10,786] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:01:10,787] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f3de1944810>
[2019-10-30 11:01:10,788] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:01:10,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:01:10,791] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:16:25,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:16:25,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:16:36,072] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:16:36,073] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:16:36,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:16:46,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:16:46,925] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:16:46,926] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:16:46,930] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:16:46,932] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:16:46,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:16:46,936] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:16:46,939] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f903559d6f0>
[2019-10-30 11:16:46,942] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:16:46,944] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:16:46,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:16:46,947] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:16:46,949] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:19:18,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:19:18,853] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:19:30,002] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:19:30,003] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:19:30,004] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:19:40,735] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:19:40,736] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:19:40,737] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:19:40,737] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:19:40,738] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:19:40,740] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:19:40,741] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:19:40,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f54af1206f0>
[2019-10-30 11:19:40,743] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:19:40,744] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:19:40,744] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:19:40,745] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:19:40,747] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:20:11,342] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:20:11,342] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:20:21,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:20:21,985] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:20:21,986] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:20:32,934] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:20:32,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:20:32,936] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:20:32,937] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:20:32,938] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:20:32,940] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:20:32,940] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:20:32,941] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f050e8896f0>
[2019-10-30 11:20:32,942] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:20:32,945] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:20:32,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:20:32,947] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:20:32,953] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:21:46,335] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:21:46,335] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:21:58,267] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:21:58,269] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:21:58,270] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:22:08,515] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:22:08,517] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:22:08,518] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:22:08,520] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:22:08,521] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:22:08,524] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:22:08,525] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:22:08,526] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f72714cc6f0>
[2019-10-30 11:22:08,527] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:22:08,529] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:22:08,530] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:22:08,532] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:22:08,534] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:23:42,148] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:23:42,148] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:23:52,392] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:23:52,393] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:23:52,394] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:24:03,176] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:24:03,177] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:24:03,178] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:24:03,179] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:24:03,180] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:24:03,185] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:24:03,186] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:24:03,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f6b967166f0>
[2019-10-30 11:24:03,203] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:24:03,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:24:03,205] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:24:03,206] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:24:03,209] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:27:03,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:27:03,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:27:18,513] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:27:18,551] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:27:18,552] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:27:18,554] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f61efb9f810>
[2019-10-30 11:27:18,555] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:27:18,557] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:27:18,558] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:29:20,825] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:30:07,978] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 11:30:07,983] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 11:30:07,985] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7ef2426810>
[2019-10-30 11:30:07,986] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:30:07,986] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:30:07,987] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:30:10,005] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:31:59,079] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 11:31:59,082] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 11:31:59,084] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbcde9bf810>
[2019-10-30 11:31:59,084] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:31:59,085] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:31:59,086] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 11:33:55,274] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:34:12,382] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:34:12,421] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:34:12,422] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:34:12,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f33b228d810>
[2019-10-30 11:34:12,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:34:12,427] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:34:12,428] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:37:23,324] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:37:38,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:37:38,057] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:37:38,057] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fae62917810>
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:38:54,544] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:38:54,544] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:39:30,608] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:39:30,642] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:39:30,643] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:39:30,645] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd4fa26f810>
[2019-10-30 11:39:30,646] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:39:30,648] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:39:30,649] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:40:39,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:40:39,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:40:53,350] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:40:53,383] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:40:53,385] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:40:53,386] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbbaf1b5810>
[2019-10-30 11:40:53,388] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:40:53,389] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:40:53,390] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:41:28,999] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:41:28,999] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:41:52,394] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:41:52,432] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:41:52,433] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:41:52,433] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f688e76a810>
[2019-10-30 11:41:52,435] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:41:52,435] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:41:52,436] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:42:06,682] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:42:06,682] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:42:14,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:42:14,797] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:42:14,798] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:42:14,799] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8575ded810>
[2019-10-30 11:42:14,801] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:42:14,802] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:42:14,803] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 12:01:29,813] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 12:01:34,370] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 12:01:34,374] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 12:01:34,377] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4ae605b810>
[2019-10-30 12:01:34,378] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 12:01:34,380] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 12:01:34,381] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 12:01:45,146] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 12:01:45,146] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 12:01:50,656] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 12:01:50,661] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 12:01:50,663] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 12:01:50,666] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff6975976f0>
[2019-10-30 12:01:50,668] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 12:01:50,669] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 12:01:50,671] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 12:01:50,672] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 12:01:50,677] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:19:51,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:19:51,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:20:03,473] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:03,475] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:03,476] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:20:14,979] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:14,981] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:14,982] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:20:26,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:26,948] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:26,949] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:20:37,305] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 13:20:37,311] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:20:37,313] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:20:37,315] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fca258ae6f0>
[2019-10-30 13:20:37,316] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:20:37,316] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:20:37,317] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:20:37,317] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:20:37,319] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:20:48,105] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:20:48,106] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:20:59,776] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:59,777] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:59,778] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:21:12,677] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:12,678] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:12,678] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:21:28,448] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:28,448] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:28,449] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:21:53,232] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:53,233] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:53,235] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:22:05,072] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:05,074] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:05,075] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:22:22,075] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:22,077] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:22,078] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:22:22,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:22:22,081] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:22:22,085] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:22:22,099] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:22:22,101] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7efed4b4c6f0>
[2019-10-30 13:22:22,102] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:22:22,103] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:22:22,104] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:22:22,105] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:22:22,107] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:22:45,793] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:22:45,793] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:22:58,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:58,824] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:58,825] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:23:10,326] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:10,328] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:10,329] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:23:21,871] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:21,873] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:21,874] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:23:33,395] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:33,397] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:33,398] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:23:46,170] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:46,171] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:46,172] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:23:52,318] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 13:23:52,323] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:23:52,325] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:23:52,327] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd20806b6f0>
[2019-10-30 13:23:52,328] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:23:52,329] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:23:52,330] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:23:52,332] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:23:52,334] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:24:44,633] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:24:44,634] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:24:56,585] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:24:56,586] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:24:56,588] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:25:08,109] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:08,110] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:08,111] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:25:21,757] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:21,758] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:21,759] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:25:34,999] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:35,000] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:35,001] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:25:58,024] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:58,026] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:58,027] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:26:09,531] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:26:09,532] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:26:09,533] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:26:09,534] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:26:09,535] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:26:09,539] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:26:09,541] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:26:09,542] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2253b9c6f0>
[2019-10-30 13:26:09,543] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:26:09,544] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:26:09,545] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:26:09,548] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:26:09,551] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:48:12,437] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:48:12,437] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:48:31,537] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:48:31,538] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:48:31,539] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:48:46,561] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:48:46,563] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:48:46,564] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:49:17,626] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:17,628] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:17,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:49:30,917] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:30,918] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:30,918] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:49:43,741] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:43,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:43,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:49:43,743] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:49:43,744] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:49:43,746] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:49:43,746] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:49:43,748] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1b31f386f0>
[2019-10-30 13:49:43,748] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:49:43,749] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:49:43,749] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:49:43,750] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:49:43,752] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:57:47,153] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:57:47,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:58:00,568] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:00,569] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:00,570] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:58:18,586] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:18,587] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:18,588] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:58:31,370] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:31,372] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:31,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:58:45,639] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:45,640] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:45,641] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:58:59,506] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:59,507] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:59,508] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:59:04,887] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "MyPi",uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 13:59:04,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:59:04,894] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:59:04,896] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc87a4b66f0>
[2019-10-30 13:59:04,897] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:59:04,898] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:59:04,899] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:59:04,901] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:59:04,903] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:02:46,463] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:02:46,464] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:03:00,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:00,720] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:00,721] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:03:13,048] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:13,049] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:13,050] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:03:27,116] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:27,117] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:27,118] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:03:44,966] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:44,968] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:44,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:03:57,777] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:57,778] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:57,779] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:04:11,863] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:04:11,865] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:04:11,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:04:11,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:04:11,867] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:04:11,877] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:04:11,878] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:04:11,880] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7faec9c2d6f0>
[2019-10-30 14:04:11,881] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:04:11,881] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:04:11,882] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:04:11,886] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:04:11,888] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:09:03,376] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:09:03,376] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:09:07,146] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 14:09:07,150] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:09:07,151] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:09:07,153] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2afa3c06f0>
[2019-10-30 14:09:07,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:09:07,155] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:09:07,156] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:09:07,157] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:09:07,159] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:09:53,458] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:09:53,458] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:10:09,241] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:09,242] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:09,243] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:10:26,923] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:26,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:26,925] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:10:44,503] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:44,504] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:44,505] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:10:56,337] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:56,338] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:56,338] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:11:08,853] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:11:08,854] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:11:08,855] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:11:20,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:11:20,630] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:11:20,631] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:11:20,632] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:11:20,637] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:11:20,640] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:11:20,641] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:11:20,642] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbe64e8e6f0>
[2019-10-30 14:11:20,643] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:11:20,644] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:11:20,645] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:11:20,647] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:11:20,649] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:20:02,542] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:20:02,543] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:20:16,009] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:16,011] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:16,012] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:20:39,950] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:39,951] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:39,952] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:20:56,781] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:56,782] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:56,784] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:21:09,439] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:09,440] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:09,441] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:21:21,679] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:21,680] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:21,682] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:21:33,780] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:33,781] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:33,782] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:21:33,783] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:21:33,785] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:21:33,789] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:21:33,791] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:21:33,801] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1e5a5cf6f0>
[2019-10-30 14:21:33,802] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:21:33,804] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:21:33,804] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:21:33,805] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:21:33,807] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:23:11,243] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:23:11,244] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:23:25,301] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:23:25,302] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:23:25,303] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:23:37,947] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:23:37,947] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:23:37,948] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:23:50,008] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 14:23:50,011] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:23:50,012] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:23:50,014] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5b7090a6f0>
[2019-10-30 14:23:50,015] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:23:50,016] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:23:50,017] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:23:50,018] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:23:50,020] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:23:50,886] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:23:50,887] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:24:03,077] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:03,078] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:03,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:24:16,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:16,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:16,374] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:24:30,851] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:30,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:30,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:24:48,658] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:48,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:48,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:24:58,931] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 14:24:58,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:24:58,936] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:24:58,938] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7efe0bda26f0>
[2019-10-30 14:24:58,939] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:24:58,940] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:24:58,941] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:24:58,942] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:24:58,945] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:29:49,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:29:49,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:30:03,264] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:03,265] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:03,266] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:30:15,762] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:15,764] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:15,765] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:30:29,052] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:29,054] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:29,055] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:30:48,039] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:48,040] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:48,041] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:31:00,657] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:31:00,658] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:31:00,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:31:19,821] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:31:19,822] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:31:19,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:31:19,824] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:31:19,825] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:31:19,829] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:31:19,830] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:31:19,831] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f176bd656f0>
[2019-10-30 14:31:19,832] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:31:19,833] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:31:19,834] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:31:19,836] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:31:19,838] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 15:15:11,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 15:15:11,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 15:15:30,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:30,970] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:30,970] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 15:15:59,299] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:59,308] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:59,309] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 15:16:13,220] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:13,221] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:13,222] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 15:16:31,117] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:31,118] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:31,119] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 15:16:43,040] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:43,042] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:43,043] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 15:16:43,049] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 15:16:43,057] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 15:16:43,060] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 15:16:43,061] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 15:16:43,062] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f3e826cf6f0>
[2019-10-30 15:16:43,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 15:16:43,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 15:16:43,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 15:16:43,066] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 15:16:43,071] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 15:18:39,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 15:18:39,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 15:18:51,891] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:18:51,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:18:51,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 15:19:04,164] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:04,165] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:04,166] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 15:19:17,483] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:17,484] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:17,485] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 15:19:29,919] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:29,920] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:29,921] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 15:19:41,791] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:41,792] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:41,794] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 15:19:54,965] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:54,966] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:54,967] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 15:19:54,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 15:19:54,971] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 15:19:54,975] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 15:19:54,979] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 15:19:54,981] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4fb22b06f0>
[2019-10-30 15:19:54,982] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 15:19:54,983] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 15:19:54,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 15:19:54,985] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 15:19:54,987] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 17:56:05,941] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 17:56:05,943] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 17:57:43,273] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 17:57:43,277] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 17:57:43,279] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8beca18810>
[2019-10-30 17:57:43,280] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 17:57:43,281] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 17:57:43,282] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 17:58:00,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 17:58:00,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:05:11,441] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:05:11,441] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:13:43,771] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:13:43,773] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f98befcb810>
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:13:43,774] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:13:45,363] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:15:54,768] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:15:54,771] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:15:54,772] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f0e0b7de810>
[2019-10-30 18:15:54,773] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:15:54,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:15:54,775] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:16:00,547] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:17:34,782] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:17:34,786] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:17:34,788] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fe929e18810>
[2019-10-30 18:17:34,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:17:34,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:17:34,790] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:17:36,140] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:19:27,348] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:19:27,352] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:19:27,353] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f1c51ca6810>
[2019-10-30 18:19:27,354] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:19:27,355] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:19:27,355] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:19:44,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:44,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:44,063] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:44,064] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb08c4256f0>
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:44,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:44,065] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:44,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:48,555] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:48,555] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff34a3ef6f0>
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:48,556] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:19:57,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:57,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:57,189] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:57,190] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb9bae5b6f0>
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:57,191] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:57,191] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:57,191] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:21:58,429] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:21:58,430] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:21:58,430] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:21:58,431] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:21:58,431] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:21:58,431] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f743f32b6f0>
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:21:58,432] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:21:58,433] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:24:07,297] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:24:07,298] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:24:18,625] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:18,627] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:18,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 18:24:32,795] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:32,796] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:32,797] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 18:24:45,538] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:45,540] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:45,541] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 18:24:57,131] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:57,132] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:57,133] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 18:25:08,831] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 18:25:08,833] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:25:08,833] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:25:08,834] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc4583b86f0>
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:25:08,836] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:25:08,836] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:25:46,718] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:25:46,718] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:25:59,821] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:25:59,822] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:25:59,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 18:26:12,671] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:12,672] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:12,673] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 18:26:26,848] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:26,848] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:26,849] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 18:26:40,840] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:40,841] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:40,842] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 18:26:45,445] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 18:26:45,449] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:26:45,450] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:26:45,451] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fea22d7c6f0>
[2019-10-30 18:26:45,451] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:26:45,452] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:26:45,452] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:26:45,453] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:26:45,454] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:26:56,935] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:27:19,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 18:27:19,903] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 18:27:19,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 18:27:19,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f909ecf0810>
[2019-10-30 18:27:19,905] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:27:19,906] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:27:19,906] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 19:58:19,486] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 19:58:19,486] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 19:58:45,751] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 19:58:45,808] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 19:58:45,809] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 19:58:45,809] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f99cc8b7810>
[2019-10-30 19:58:45,810] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 19:58:45,811] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 19:58:45,811] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-04 15:02:48,113] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 15:02:48,114] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 15:02:48,114] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 15:03:37,865] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-11-04 15:03:37,896] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-11-04 15:03:37,898] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-11-04 15:03:37,899] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd1e48d7810>
[2019-11-04 15:03:37,901] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 15:03:37,902] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 15:03:37,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-04 20:13:45,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:13:45,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:13:45,893] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:15:22,206] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-04 20:15:22,212] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:15:22,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fa83fb57810>
[2019-11-04 20:15:22,215] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:15:22,216] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:15:22,217] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:15:23,181] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:15:23,181] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:15:23,182] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:15:55,860] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-04 20:15:55,864] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:15:55,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f019016b810>
[2019-11-04 20:15:55,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:15:55,868] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:15:55,869] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:16:49,822] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-04 20:16:49,881] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:16:49,884] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7579aa0810>
[2019-11-04 20:16:49,885] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:16:49,886] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:16:49,887] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-05 01:05:10,520] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 01:05:10,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 01:05:10,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 01:05:10,525] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 01:06:36,348] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 01:06:36,349] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1c7795f810>
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 01:06:36,852] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 164, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 01:06:36,855] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 01:12:28,470] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 01:12:28,470] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 01:12:34,806] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 01:12:34,806] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc39de33810>
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 01:12:35,308] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 121, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 01:12:35,309] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
