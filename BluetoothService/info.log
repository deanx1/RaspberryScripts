[2019-10-01 13:22:34,477] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 13:22:34,478] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 13:22:34,478] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 13:26:04,319] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 13:26:04,322] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 13:26:04,323] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fe4f4ba7810>
[2019-10-01 13:26:04,324] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 13:26:04,325] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 13:26:04,326] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 13:33:58,251] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-01 13:33:58,251] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-01 13:33:58,251] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-01 13:33:58,252] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-01 13:51:06,418] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-01 13:51:06,418] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-01 13:51:06,418] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-01 13:51:06,419] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-01 13:51:41,712] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 13:51:41,713] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 13:51:41,713] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:03:59,685] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:03:59,686] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:03:59,686] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:03:59,687] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:03:59,687] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:08:39,969] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 14:08:39,971] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 14:08:39,973] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc21e678810>
[2019-10-01 14:08:39,974] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 14:08:39,975] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 14:08:39,976] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:08:40,897] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:08:40,898] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:08:40,898] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-01 14:09:53,037] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-01 14:09:53,039] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd0a5c6e810>
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-01 14:09:53,041] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-01 14:09:53,041] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-01 14:09:56,444] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-01 14:09:56,444] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-08 13:26:27,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:26:27,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:27:11,437] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:27:15,304] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:27:15,305] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:27:15,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:27:15,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:27:15,307] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:27:15,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:27:15,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:27:15,309] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:27:15,310] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:27:15,311] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:27:15,312] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:27:15,312] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:27:15,313] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (16, 'Device or resource busy')
[2019-10-08 13:27:15,316] : [ERROR] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Failed to load content from the text.json
Traceback (most recent call last):
  File "bleClient.py", line 90, in readJsonFile
    jsonFileObj = open(self.lsonFile,"r")
AttributeError: bleClient instance has no attribute 'lsonFile'
[2019-10-08 13:27:15,318] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:27:15,318] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:27:15,319] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 13:27:15,321] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:27:28,368] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:27:28,368] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:27:53,156] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:27:53,160] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:31:41,027] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:31:41,027] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:32:41,484] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:32:41,486] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:32:41,486] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:32:41,487] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:32:41,488] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:32:41,488] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:32:41,489] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:32:41,489] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:32:41,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:32:41,490] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (16, 'Device or resource busy')
[2019-10-08 13:32:41,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ffb58e76780>
[2019-10-08 13:32:41,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:32:41,492] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 13:32:41,492] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:32:58,459] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:32:58,459] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:33:02,622] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:33:02,626] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:33:08,750] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:33:08,750] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:34:09,830] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:34:09,831] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:34:09,832] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:34:09,832] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:34:09,833] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:34:09,834] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:34:09,834] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:34:09,835] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:34:09,835] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:34:09,836] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:34:09,837] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:34:09,838] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:34:13,469] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:34:13,470] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f19d0b25780>
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:34:13,471] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:34:13,972] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:34:13,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:38:08,761] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:38:08,761] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:38:19,124] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:38:29,382] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 13:38:29,383] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 13:38:29,385] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:40:35,269] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:40:35,269] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:41:36,657] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:41:36,658] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:41:36,659] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:41:36,659] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:41:36,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:41:36,661] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:41:36,972] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:41:36,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff635439780>
[2019-10-08 13:41:36,973] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:41:36,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:41:36,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:41:37,476] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:41:37,476] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:42:23,056] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:42:23,056] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:43:10,502] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:43:10,503] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:43:10,504] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:43:10,505] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:43:10,506] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:43:10,507] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:43:10,507] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:43:10,508] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:43:10,509] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:43:10,510] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:43:10,510] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:43:10,511] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4db488e780>
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:43:14,858] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:43:14,859] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:43:15,360] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:43:15,361] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 13:47:23,895] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:47:23,895] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:48:04,927] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 13:48:04,930] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:48:06,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 13:48:06,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 13:48:52,521] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 13:49:42,726] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 13:49:42,727] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 13:49:42,728] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 13:49:42,729] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 13:49:42,730] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 13:49:42,731] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 13:49:42,733] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 13:49:42,734] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 13:49:42,736] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 13:49:42,738] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 13:49:42,745] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 13:49:42,746] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe728554780>
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 13:49:42,944] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 13:49:42,945] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 13:49:43,445] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-08 13:49:43,446] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:08:11,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:08:11,660] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:09:06,804] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 14:09:06,805] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 14:09:06,806] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 14:09:06,807] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 14:09:06,808] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 14:09:06,809] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 14:09:06,810] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 14:09:06,811] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 14:09:06,812] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 14:09:06,814] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 14:09:06,815] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:09:06,816] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 14:09:06,945] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (111, 'Connection refused')
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb36ac78780>
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 14:09:06,946] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 14:09:06,946] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:09:52,383] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:09:52,384] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:10:00,397] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:11:54,555] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:11:54,559] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:12:00,072] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:12:00,072] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:13:13,968] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:13:37,541] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-08 14:13:37,542] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-08 14:13:37,543] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-08 14:13:37,544] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-08 14:13:37,544] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-08 14:13:37,545] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-08 14:13:37,546] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-08 14:13:37,547] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-08 14:13:37,547] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-08 14:13:37,548] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-08 14:13:37,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:13:37,549] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-08 14:13:37,678] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Failed to connect to "BluetoothServices" on address B8:27:EB:B6:74:28 with port 1
Traceback (most recent call last):
  File "bleClient.py", line 83, in getBluetoothConnection
    self.clientSocket.connect((bleServiceInfo['host'], bleServiceInfo['port']))
  File "<string>", line 5, in connect
BluetoothError: (111, 'Connection refused')
[2019-10-08 14:13:37,681] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f607e3be780>
[2019-10-08 14:13:37,682] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-08 14:13:37,683] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-08 14:13:37,683] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-08 14:13:37,684] : [ERROR] : [bleClientLogger] : [bleClient.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleClient.py", line 110, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-08 14:13:37,685] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-08 14:28:28,232] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:28:28,232] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:29:06,526] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:29:06,530] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:29:24,029] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:29:24,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:31:10,020] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:32:48,625] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:32:48,627] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:32:48,630] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:33:56,915] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:33:56,916] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:35:35,337] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:37:16,645] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:37:16,646] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:37:16,648] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:38:23,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:38:23,490] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:40:02,839] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:41:40,804] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:41:40,806] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:41:40,808] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:42:51,884] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:42:51,885] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:44:28,740] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:45:00,721] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 14:45:00,724] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 14:47:16,689] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 14:47:16,689] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 14:48:54,791] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 14:49:57,064] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 14:49:57,066] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 14:49:57,067] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:00:38,558] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:00:38,558] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:00:38,558] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:00:38,559] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:00:44,496] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:00:44,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:01:13,374] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:01:13,374] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:01:13,374] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:01:13,375] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:01:33,934] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:01:33,934] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:02:25,988] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:03:18,751] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 15:03:18,751] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 15:03:18,752] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:03:50,584] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:03:50,584] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:04:23,220] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-08 15:04:23,223] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:10:19,597] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:10:19,597] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:11:17,574] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:12:22,608] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-08 15:12:22,610] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-08 15:12:22,613] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-08 15:22:12,978] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-08 15:22:12,978] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-08 15:23:10,177] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-08 15:23:19,109] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-08 15:23:19,110] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 11:58:42,868] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 11:58:42,869] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 11:59:04,308] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 11:59:25,313] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 11:59:25,314] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 11:59:25,319] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:33:56,598] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:33:56,598] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:34:16,413] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:34:39,404] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:34:39,405] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:34:39,405] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:41:39,240] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:41:39,240] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:41:58,528] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:42:17,427] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:42:17,428] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:42:17,431] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:42:56,996] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:42:56,997] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:43:05,336] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-09 12:43:05,341] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:43:27,783] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:43:27,783] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:43:44,649] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:44:02,049] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:44:02,051] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:44:02,055] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:53:29,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:53:29,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:53:47,520] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:54:05,554] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:54:05,555] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:54:05,556] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:54:14,651] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:54:14,651] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:54:32,297] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:54:50,247] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:54:50,248] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:54:50,250] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 12:58:11,586] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 12:58:11,587] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 12:58:28,840] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 12:58:47,048] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 12:58:47,049] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 12:58:47,050] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:16:31,911] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:16:31,911] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:16:51,400] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 13:17:10,859] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 13:17:10,860] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 13:17:10,862] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:17:23,552] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:17:23,552] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:17:46,923] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-09 13:17:46,926] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:20:59,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:20:59,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:21:18,915] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 13:21:39,263] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 13:21:39,265] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 13:21:39,267] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:23:18,185] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:23:18,186] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:23:33,164] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 13:23:33,165] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 13:23:33,166] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 13:23:33,167] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 13:23:33,168] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 13:23:33,169] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 13:23:33,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 13:23:33,170] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 13:23:33,171] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 13:23:33,173] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 13:23:33,173] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:23:33,174] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 13:23:34,087] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 13:23:34,089] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb41285b780>
[2019-10-09 13:23:34,090] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 13:23:34,091] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 13:23:34,091] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 13:23:34,593] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 13:23:34,593] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 13:25:34,053] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:25:34,053] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:26:08,790] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-09 13:26:08,794] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:26:18,035] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 13:26:18,035] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 13:26:33,847] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 13:26:33,848] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 13:26:33,848] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 13:26:33,849] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 13:26:33,849] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 13:26:33,850] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 13:26:33,850] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 13:26:33,851] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 13:26:33,852] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 13:26:33,852] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 13:26:33,853] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 13:26:33,853] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fa64da0f780>
[2019-10-09 13:26:34,702] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 13:26:34,703] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 13:26:34,703] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 13:26:35,204] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 13:26:35,206] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 15:07:21,641] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:07:21,642] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:07:37,102] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 15:08:03,921] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-09 15:08:03,922] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 56, in getBluetoothServices
    if not bleService: raise SystemExit(), KeyboardInterrupt()
TypeError: instance exception may not have a separate value
[2019-10-09 15:08:03,923] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:08:06,371] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:08:06,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:08:27,012] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 15:08:27,013] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 15:08:27,013] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 15:08:27,014] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 15:08:27,015] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 15:08:27,016] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 15:08:27,016] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:08:27,017] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 15:08:31,896] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 15:08:31,897] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5216d9e780>
[2019-10-09 15:08:31,898] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 15:08:31,899] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 15:08:31,900] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 15:08:32,401] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 15:08:32,402] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-09 15:11:59,474] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-09 15:11:59,474] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-09 15:12:07,201] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-09 15:12:26,389] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-09 15:12:26,390] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-09 15:12:26,391] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-09 15:12:26,391] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-09 15:12:26,392] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-09 15:12:26,393] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-09 15:12:26,394] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-09 15:12:26,395] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-09 15:12:26,396] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-09 15:12:26,396] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-09 15:12:26,397] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-09 15:12:26,398] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-09 15:12:27,119] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-09 15:12:27,120] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f8dc27e8780>
[2019-10-09 15:12:27,121] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-09 15:12:27,121] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-09 15:12:27,122] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-09 15:12:27,624] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-09 15:12:27,625] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 11:46:53,180] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 11:46:53,181] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 11:46:58,620] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 11:46:58,627] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 11:50:00,518] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 11:50:00,518] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 11:50:29,491] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 11:50:29,493] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 11:50:29,493] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 11:50:29,494] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 11:50:29,495] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 11:50:29,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 11:50:29,496] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 11:50:29,497] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 11:50:29,498] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 11:50:29,499] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-15 11:50:29,499] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 11:50:29,500] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 11:50:34,523] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 11:50:34,524] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc065ebc780>
[2019-10-15 11:50:34,526] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 11:50:34,527] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 11:50:34,527] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 11:50:35,028] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 11:50:35,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 12:24:59,560] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:24:59,560] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:25:26,707] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-15 12:25:30,344] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 12:25:30,347] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 12:26:54,706] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:26:54,706] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 12:27:30,974] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 12:27:30,975] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Description	: None
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 12:27:30,976] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 12:27:35,444] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 12:27:35,445] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f316f8c8780>
[2019-10-15 12:27:35,446] : [INFO] : [bleClientLogger] : [bleClient.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 12:27:35,447] : [INFO] : [bleClientLogger] : [bleClient.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 12:27:35,448] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 12:27:35,950] : [INFO] : [bleClientLogger] : [bleClient.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 12:27:35,950] : [INFO] : [bleClientLogger] : [bleClient.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 12:33:55,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 12:33:55,372] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 12:33:59,639] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 12:33:59,643] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:08,071] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 13:03:08,071] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 13:03:08,072] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 13:03:08,072] : [INFO] : [bleServerLogger] : [bleServer.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 13:03:08,072] : [ERROR] : [bleServerLogger] : [bleServer.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleServer.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 13:03:14,991] : [ERROR] : [bleServerLogger] : [bleServer.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleServer.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 13:03:14,993] : [ERROR] : [bleServerLogger] : [bleServer.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleServer.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 13:03:14,995] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8497e5f810>
[2019-10-15 13:03:14,996] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 13:03:14,997] : [INFO] : [bleServerLogger] : [bleServer.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 13:03:14,997] : [ERROR] : [bleServerLogger] : [bleServer.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleServer.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 13:03:21,293] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:21,293] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:24,146] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:24,151] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:44,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:44,306] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:47,872] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:47,877] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 13:03:56,030] : [INFO] : [bleClientLogger] : [bleClient.py] : [<module>] : Setup logging configuration
[2019-10-15 13:03:56,031] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 13:03:59,257] : [ERROR] : [bleClientLogger] : [bleClient.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleClient.py", line 51, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-15 13:03:59,262] : [INFO] : [bleClientLogger] : [bleClient.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 14:51:51,785] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-15 14:51:51,785] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-15 14:52:24,861] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Found  Bluetooth services ..
[2019-10-15 14:52:24,863] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Protocol	: RFCOMM
[2019-10-15 14:52:24,865] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Name		: BluetoothServices
[2019-10-15 14:52:24,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Service-id	: 94F39D29-7D6D-437D-973B-FBA39E49D4EE
[2019-10-15 14:52:24,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Profiles	: [('1101', 256)]
[2019-10-15 14:52:24,867] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Service-class	: []
[2019-10-15 14:52:24,868] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Host		: B8:27:EB:B6:74:28
[2019-10-15 14:52:24,869] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Provider	: None
[2019-10-15 14:52:24,869] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Port		: 1
[2019-10-15 14:52:24,870] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Description	: None
[2019-10-15 14:52:24,871] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-15 14:52:24,872] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Connecting to "BluetoothServices" on B8:27:EB:B6:74:28 with port 1
[2019-10-15 14:52:26,701] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Connected successfully to BluetoothServices 
[2019-10-15 14:52:26,702] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0047238780>
[2019-10-15 14:52:26,702] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-15 14:52:26,703] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-15 14:52:26,703] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-15 14:52:27,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Data sent successfully over bluetooth connection
[2019-10-15 14:52:27,205] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 14:57:00,052] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 14:57:00,052] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 14:57:26,593] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 14:57:26,595] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 14:57:26,596] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f47d7d49810>
[2019-10-15 14:57:26,597] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 14:57:26,598] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 14:57:26,598] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:04:30,213] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:04:30,213] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:04:30,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:04:30,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:04:30,214] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 15:07:39,784] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 15:07:39,787] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 15:07:39,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f27930b7810>
[2019-10-15 15:07:39,790] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 15:07:39,791] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 15:07:39,791] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:08:00,991] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:08:00,991] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:08:00,992] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:08:00,992] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:08:00,992] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 15:21:41,343] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 15:21:41,346] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 15:21:41,348] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4059a2c810>
[2019-10-15 15:21:41,349] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 15:21:41,350] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 15:21:41,351] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-15 15:29:16,622] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-15 15:29:16,623] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-15 15:29:16,623] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-15 18:59:48,163] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-15 18:59:48,163] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f44dd5d3810>
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-15 18:59:48,164] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-15 18:59:48,164] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:06:03,064] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:06:03,065] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:06:03,065] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-16 13:10:59,330] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:10:59,332] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:10:59,335] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f566f751810>
[2019-10-16 13:10:59,336] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:10:59,337] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:10:59,338] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:14:35,677] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:14:35,678] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:14:35,678] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 77, in advertiseBluetoothService
    profiles = [ SERIAL_PORT_PROFILE ],
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 176, in advertise_service
    raise BluetoothError (str (e))
BluetoothError: (2, 'No such file or directory')
[2019-10-16 13:17:51,374] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:17:51,377] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:17:51,382] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7feef68c1810>
[2019-10-16 13:17:51,383] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:17:51,385] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:17:51,386] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:33:03,421] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:33:03,422] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:33:03,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:33:10,253] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:33:10,260] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:33:10,263] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fab66ec9810>
[2019-10-16 13:33:10,264] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:33:10,265] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:33:10,266] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:33:56,743] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:33:56,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:34:27,842] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 13:34:27,886] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 13:34:27,887] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 13:34:27,888] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8d428dd810>
[2019-10-16 13:34:27,889] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:34:27,890] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:34:27,891] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:44:56,134] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:44:56,135] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:44:56,135] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:45:02,697] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:45:02,698] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f39d4100810>
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:45:02,699] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:45:02,699] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:48:19,200] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:48:19,200] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:48:19,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:49:05,480] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:49:05,484] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:49:05,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fdfd447c810>
[2019-10-16 13:49:05,488] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:49:05,490] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:49:05,491] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:49:57,342] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:49:57,343] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:49:57,344] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:50:31,231] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 13:50:31,236] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 13:50:31,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbf2da2a810>
[2019-10-16 13:50:31,239] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:50:31,240] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:50:31,241] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 13:52:19,092] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 13:52:19,093] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 13:52:45,108] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 13:52:45,166] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 13:52:45,167] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 13:52:45,169] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f5a90005810>
[2019-10-16 13:52:45,171] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 13:52:45,172] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 13:52:45,175] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:04:46,938] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:04:46,938] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:04:46,939] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:04:46,939] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:04:46,939] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:06:08,378] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:06:08,383] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:06:08,385] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:06:08,388] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:06:09,470] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:06:09,470] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:06:09,471] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:06:09,471] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:06:09,471] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:08:44,578] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:08:44,582] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:08:44,584] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:08:44,586] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:12:35,735] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:12:35,736] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:12:35,736] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:19:58,558] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:19:58,561] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:19:58,563] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:19:58,565] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:20:34,703] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:20:34,703] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:20:34,704] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:20:34,704] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:20:34,704] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:23:28,169] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:23:28,171] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:23:28,173] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:23:28,174] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:23:28,948] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:23:28,948] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:23:28,949] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:23:28,949] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:23:28,949] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : Failed to advertise bluetooth services  ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 74, in advertiseBluetoothService
    advertise_service( self.serverSocket, self.serviceName,
AttributeError: bleServer instance has no attribute 'serviceName'
[2019-10-16 14:31:52,693] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:31:52,697] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:31:52,699] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Failed to write json contents to the file ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 121, in writeJsonFile
    jsonFileObj = open(self.jsonFile,"w")
AttributeError: bleServer instance has no attribute 'jsonFile'
[2019-10-16 14:31:52,701] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:31:53,451] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:31:53,452] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:31:55,545] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:31:55,549] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:31:55,551] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fcf7d675810>
[2019-10-16 14:31:55,552] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:31:55,553] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:31:55,554] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:32:44,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:32:44,766] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:32:58,113] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:32:58,118] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:32:58,120] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7b5408a810>
[2019-10-16 14:32:58,122] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:32:58,123] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:32:58,123] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:32:58,972] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:32:58,973] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:32:58,974] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:35:17,577] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 86, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-16 14:35:17,578] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 113, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f999fa25810>
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:35:17,579] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:35:17,579] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 135, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'int' object has no attribute 'close'
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:35:19,238] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:35:19,239] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:36:34,252] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:36:34,295] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:36:34,297] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:36:34,298] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc155e5a810>
[2019-10-16 14:36:34,299] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:36:34,300] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:36:34,301] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:37:26,574] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:37:26,575] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:37:26,575] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:37:45,576] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:37:45,657] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:37:45,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:37:45,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fc2813b9810>
[2019-10-16 14:37:45,661] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:37:45,662] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:37:45,664] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:40:17,228] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:40:17,228] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:40:17,229] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:40:47,686] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:40:47,744] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:40:47,745] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:40:47,747] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fda89d9c810>
[2019-10-16 14:40:47,748] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:40:47,749] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:40:47,750] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 14:42:19,872] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 14:42:19,873] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 14:42:19,873] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 14:42:37,360] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 14:42:37,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 14:42:37,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 14:42:37,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4106bc5810>
[2019-10-16 14:42:37,426] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 14:42:37,426] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 14:42:37,427] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 15:17:37,028] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 15:17:37,029] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 15:18:02,223] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 15:18:02,258] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-16 15:18:02,260] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7efc99318810>
[2019-10-16 15:18:02,261] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 15:18:02,262] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 15:18:02,263] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-16 15:26:22,201] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-16 15:26:22,202] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-16 15:26:51,177] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-16 15:26:51,313] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-16 15:26:51,314] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-16 15:26:51,315] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f654c6fd810>
[2019-10-16 15:26:51,317] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-16 15:26:51,318] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-16 15:26:51,319] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-29 15:30:51,564] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-29 15:30:51,565] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-29 15:30:51,566] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-29 15:30:51,567] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-29 15:30:51,568] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-29 15:32:05,235] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-29 15:32:05,358] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-29 15:32:05,359] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-29 15:32:05,361] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f726c4b9810>
[2019-10-29 15:32:05,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-29 15:32:05,363] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-29 15:32:05,364] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-29 18:32:47,983] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-29 18:32:47,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-29 18:33:01,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-29 18:33:12,766] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-29 18:33:12,767] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 59, in getBluetoothServices
    if not bleService: raise SystemExit(), None
SystemExit
[2019-10-29 18:33:12,770] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-29 18:43:14,272] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-29 18:43:14,272] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-29 18:43:25,790] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-29 18:43:38,756] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-29 18:43:38,769] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:00:48,689] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:00:48,690] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:01:10,748] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:01:10,785] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:01:10,786] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:01:10,787] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f3de1944810>
[2019-10-30 11:01:10,788] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:01:10,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:01:10,791] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:16:25,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:16:25,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:16:36,072] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:16:36,073] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:16:36,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:16:46,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:16:46,925] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:16:46,926] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:16:46,930] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:16:46,932] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:16:46,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:16:46,936] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:16:46,939] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f903559d6f0>
[2019-10-30 11:16:46,942] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:16:46,944] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:16:46,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:16:46,947] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:16:46,949] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:19:18,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:19:18,853] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:19:30,002] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:19:30,003] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:19:30,004] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:19:40,735] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:19:40,736] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:19:40,737] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:19:40,737] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:19:40,738] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:19:40,740] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:19:40,741] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:19:40,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f54af1206f0>
[2019-10-30 11:19:40,743] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:19:40,744] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:19:40,744] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:19:40,745] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:19:40,747] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:20:11,342] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:20:11,342] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:20:21,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:20:21,985] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:20:21,986] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:20:32,934] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:20:32,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:20:32,936] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:20:32,937] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:20:32,938] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:20:32,940] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:20:32,940] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:20:32,941] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f050e8896f0>
[2019-10-30 11:20:32,942] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:20:32,945] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:20:32,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:20:32,947] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:20:32,953] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:21:46,335] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:21:46,335] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:21:58,267] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:21:58,269] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:21:58,270] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:22:08,515] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:22:08,517] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:22:08,518] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:22:08,520] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:22:08,521] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:22:08,524] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:22:08,525] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:22:08,526] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f72714cc6f0>
[2019-10-30 11:22:08,527] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:22:08,529] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:22:08,530] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:22:08,532] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:22:08,534] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:23:42,148] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 11:23:42,148] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 11:23:52,392] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:23:52,393] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:23:52,394] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 11:24:03,176] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 11:24:03,177] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 11:24:03,178] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 11:24:03,179] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 11:24:03,180] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 11:24:03,185] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 11:24:03,186] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 11:24:03,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f6b967166f0>
[2019-10-30 11:24:03,203] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 11:24:03,204] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 11:24:03,205] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 11:24:03,206] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 11:24:03,209] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 11:27:03,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:27:03,658] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:27:03,659] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:27:18,513] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:27:18,551] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:27:18,552] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:27:18,554] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f61efb9f810>
[2019-10-30 11:27:18,555] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:27:18,557] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:27:18,558] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:29:20,824] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:29:20,825] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:30:07,978] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 11:30:07,983] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 11:30:07,985] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7ef2426810>
[2019-10-30 11:30:07,986] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:30:07,986] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:30:07,987] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:30:10,004] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:30:10,005] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:31:59,079] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 11:31:59,082] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 11:31:59,084] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbcde9bf810>
[2019-10-30 11:31:59,084] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:31:59,085] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:31:59,086] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 11:33:55,274] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:33:55,275] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:34:12,382] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:34:12,421] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:34:12,422] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:34:12,423] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f33b228d810>
[2019-10-30 11:34:12,425] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:34:12,427] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:34:12,428] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:37:23,323] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:37:23,324] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:37:38,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:37:38,057] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:37:38,057] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fae62917810>
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:37:38,058] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:38:54,544] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:38:54,544] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:38:54,545] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:39:30,608] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:39:30,642] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:39:30,643] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:39:30,645] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd4fa26f810>
[2019-10-30 11:39:30,646] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:39:30,648] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:39:30,649] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:40:39,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:40:39,009] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:40:39,010] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:40:53,350] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:40:53,383] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:40:53,385] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:40:53,386] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fbbaf1b5810>
[2019-10-30 11:40:53,388] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:40:53,389] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:40:53,390] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:41:28,999] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:41:28,999] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:41:29,000] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:41:52,394] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:41:52,432] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:41:52,433] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:41:52,433] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f688e76a810>
[2019-10-30 11:41:52,435] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:41:52,435] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:41:52,436] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 11:42:06,682] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 11:42:06,682] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 11:42:06,683] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 11:42:14,765] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 11:42:14,797] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 11:42:14,798] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 11:42:14,799] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8575ded810>
[2019-10-30 11:42:14,801] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 11:42:14,802] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 11:42:14,803] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 12:01:29,813] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 12:01:29,814] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 12:01:34,370] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 90, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 12:01:34,374] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 117, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 12:01:34,377] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f4ae605b810>
[2019-10-30 12:01:34,378] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 12:01:34,380] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 12:01:34,381] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 139, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 12:01:45,146] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 12:01:45,146] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 12:01:50,656] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 12:01:50,661] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 12:01:50,663] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 12:01:50,666] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff6975976f0>
[2019-10-30 12:01:50,668] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 12:01:50,669] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 12:01:50,671] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 12:01:50,672] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 12:01:50,677] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:19:51,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:19:51,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:20:03,473] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:03,475] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:03,476] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:20:14,979] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:14,981] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:14,982] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:20:26,946] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:26,948] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:26,949] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:20:37,305] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 13:20:37,311] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:20:37,313] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:20:37,315] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fca258ae6f0>
[2019-10-30 13:20:37,316] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:20:37,316] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:20:37,317] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:20:37,317] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:20:37,319] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:20:48,105] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:20:48,106] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:20:59,776] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:20:59,777] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:20:59,778] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:21:12,677] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:12,678] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:12,678] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:21:28,448] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:28,448] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:28,449] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:21:53,232] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:21:53,233] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:21:53,235] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:22:05,072] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:05,074] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:05,075] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:22:22,075] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:22,077] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:22,078] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:22:22,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:22:22,081] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:22:22,085] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:22:22,099] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:22:22,101] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7efed4b4c6f0>
[2019-10-30 13:22:22,102] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:22:22,103] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:22:22,104] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:22:22,105] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:22:22,107] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:22:45,793] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:22:45,793] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:22:58,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:22:58,824] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:22:58,825] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:23:10,326] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:10,328] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:10,329] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:23:21,871] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:21,873] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:21,874] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:23:33,395] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:33,397] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:33,398] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:23:46,170] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:23:46,171] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:23:46,172] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:23:52,318] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 13:23:52,323] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:23:52,325] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:23:52,327] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd20806b6f0>
[2019-10-30 13:23:52,328] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:23:52,329] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:23:52,330] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:23:52,332] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:23:52,334] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:24:44,633] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:24:44,634] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:24:56,585] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:24:56,586] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:24:56,588] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:25:08,109] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:08,110] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:08,111] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:25:21,757] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:21,758] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:21,759] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:25:34,999] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:35,000] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:35,001] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:25:58,024] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:25:58,026] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:25:58,027] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:26:09,531] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:26:09,532] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:26:09,533] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:26:09,534] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:26:09,535] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:26:09,539] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:26:09,541] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:26:09,542] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2253b9c6f0>
[2019-10-30 13:26:09,543] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:26:09,544] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:26:09,545] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:26:09,548] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:26:09,551] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:48:12,437] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:48:12,437] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:48:31,537] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:48:31,538] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:48:31,539] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:48:46,561] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:48:46,563] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:48:46,564] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:05,215] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:49:17,626] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:17,628] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:17,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:49:30,917] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:30,918] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:30,918] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:49:43,741] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:49:43,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:49:43,742] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 13:49:43,743] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 13:49:43,744] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 13:49:43,746] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:49:43,746] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:49:43,748] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1b31f386f0>
[2019-10-30 13:49:43,748] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:49:43,749] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:49:43,749] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:49:43,750] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:49:43,752] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 13:57:47,153] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 13:57:47,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 13:58:00,568] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:00,569] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:00,570] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 13:58:18,586] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:18,587] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:18,588] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 13:58:31,370] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:31,372] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:31,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 13:58:45,639] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:45,640] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:45,641] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 13:58:59,506] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 13:58:59,507] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 13:58:59,508] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 13:59:04,887] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "MyPi",uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 13:59:04,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 13:59:04,894] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 13:59:04,896] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc87a4b66f0>
[2019-10-30 13:59:04,897] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 13:59:04,898] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 13:59:04,899] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 13:59:04,901] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 13:59:04,903] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:02:46,463] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:02:46,464] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:03:00,719] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:00,720] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:00,721] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:03:13,048] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:13,049] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:13,050] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:03:27,116] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:27,117] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:27,118] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:03:44,966] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:44,968] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:44,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:03:57,777] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:03:57,778] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:03:57,779] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:04:11,863] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:04:11,865] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:04:11,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:04:11,866] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:04:11,867] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:04:11,877] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:04:11,878] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:04:11,880] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7faec9c2d6f0>
[2019-10-30 14:04:11,881] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:04:11,881] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:04:11,882] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:04:11,886] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:04:11,888] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:09:03,376] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:09:03,376] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:09:07,146] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 14:09:07,150] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:09:07,151] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:09:07,153] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2afa3c06f0>
[2019-10-30 14:09:07,154] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:09:07,155] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:09:07,156] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:09:07,157] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:09:07,159] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:09:53,458] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:09:53,458] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:10:09,241] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:09,242] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:09,243] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:10:26,923] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:26,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:26,925] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:10:44,503] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:44,504] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:44,505] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:10:56,337] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:10:56,338] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:10:56,338] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:11:08,853] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:11:08,854] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:11:08,855] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:11:20,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:11:20,630] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:11:20,631] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:11:20,632] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:11:20,637] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:11:20,640] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:11:20,641] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:11:20,642] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbe64e8e6f0>
[2019-10-30 14:11:20,643] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:11:20,644] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:11:20,645] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:11:20,647] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:11:20,649] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:20:02,542] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:20:02,543] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:20:16,009] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:16,011] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:16,012] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:20:39,950] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:39,951] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:39,952] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:20:56,781] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:20:56,782] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:20:56,784] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:21:09,439] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:09,440] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:09,441] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:21:21,679] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:21,680] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:21,682] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:21:33,780] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:21:33,781] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:21:33,782] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:21:33,783] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:21:33,785] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:21:33,789] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:21:33,791] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:21:33,801] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1e5a5cf6f0>
[2019-10-30 14:21:33,802] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:21:33,804] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:21:33,804] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:21:33,805] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:21:33,807] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:23:11,243] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:23:11,244] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:23:25,301] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:23:25,302] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:23:25,303] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:23:37,947] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:23:37,947] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:23:37,948] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:23:50,008] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 14:23:50,011] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:23:50,012] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:23:50,014] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5b7090a6f0>
[2019-10-30 14:23:50,015] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:23:50,016] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:23:50,017] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:23:50,018] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:23:50,020] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:23:50,886] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:23:50,887] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:24:03,077] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:03,078] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:03,079] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:24:16,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:16,373] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:16,374] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:24:30,851] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:30,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:30,852] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:24:48,658] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:24:48,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:24:48,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:24:58,931] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 199, in find_service
    s.connect (addr)
KeyboardInterrupt
[2019-10-30 14:24:58,935] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:24:58,936] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:24:58,938] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7efe0bda26f0>
[2019-10-30 14:24:58,939] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:24:58,940] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:24:58,941] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:24:58,942] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:24:58,945] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 14:29:49,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 14:29:49,924] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 14:30:03,264] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:03,265] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:03,266] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 14:30:15,762] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:15,764] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:15,765] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 14:30:29,052] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:29,054] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:29,055] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 14:30:48,039] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:30:48,040] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:30:48,041] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 14:31:00,657] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:31:00,658] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:31:00,659] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 14:31:19,821] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 14:31:19,822] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 14:31:19,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 14:31:19,824] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 14:31:19,825] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 14:31:19,829] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 14:31:19,830] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 14:31:19,831] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f176bd656f0>
[2019-10-30 14:31:19,832] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 14:31:19,833] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 14:31:19,834] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 14:31:19,836] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 14:31:19,838] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 15:15:11,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 15:15:11,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 15:15:30,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:30,970] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:30,970] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:44,218] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 15:15:59,299] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:15:59,308] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:15:59,309] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 15:16:13,220] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:13,221] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:13,222] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 15:16:31,117] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:31,118] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:31,119] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 15:16:43,040] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:16:43,042] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:16:43,043] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 15:16:43,049] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 15:16:43,057] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 15:16:43,060] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 15:16:43,061] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 15:16:43,062] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f3e826cf6f0>
[2019-10-30 15:16:43,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 15:16:43,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 15:16:43,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 15:16:43,066] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 15:16:43,071] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 15:18:39,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 15:18:39,188] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 15:18:51,891] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:18:51,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:18:51,892] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 15:19:04,164] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:04,165] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:04,166] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 15:19:17,483] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:17,484] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:17,485] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 15:19:29,919] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:29,920] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:29,921] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 15:19:41,791] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:41,792] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:41,794] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 15:19:54,965] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 15:19:54,966] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 15:19:54,967] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 7 attempt
[2019-10-30 15:19:54,969] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Not bleService!
[2019-10-30 15:19:54,971] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 64, in getBluetoothServices
    raise SystemExit(), None
SystemExit
[2019-10-30 15:19:54,975] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 15:19:54,979] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 15:19:54,981] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4fb22b06f0>
[2019-10-30 15:19:54,982] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 15:19:54,983] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 15:19:54,984] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 15:19:54,985] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 15:19:54,987] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 17:56:05,941] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 17:56:05,942] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 17:56:05,943] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 17:57:43,273] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 17:57:43,277] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 17:57:43,279] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f8beca18810>
[2019-10-30 17:57:43,280] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 17:57:43,281] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 17:57:43,282] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 17:58:00,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 17:58:00,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 17:58:00,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:05:11,441] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:05:11,441] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:05:11,442] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:13:43,771] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:13:43,773] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f98befcb810>
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:13:43,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:13:43,774] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:13:45,362] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:13:45,363] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:15:54,768] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:15:54,771] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:15:54,772] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f0e0b7de810>
[2019-10-30 18:15:54,773] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:15:54,774] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:15:54,775] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:16:00,547] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:16:00,548] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:17:34,782] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:17:34,786] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:17:34,788] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fe929e18810>
[2019-10-30 18:17:34,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:17:34,789] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:17:34,790] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:17:36,140] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:17:36,141] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:19:27,348] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-10-30 18:19:27,352] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-10-30 18:19:27,353] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f1c51ca6810>
[2019-10-30 18:19:27,354] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:19:27,355] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:19:27,355] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-10-30 18:19:44,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:44,063] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:44,063] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:44,064] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb08c4256f0>
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:44,064] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:44,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:44,065] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:44,065] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:48,555] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:48,555] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:48,555] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff34a3ef6f0>
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:48,556] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:48,556] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:19:57,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:19:57,189] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:19:57,189] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 53, in getBluetoothServices
    bleService = find_service( name = "PI", uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:19:57,190] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb9bae5b6f0>
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:19:57,190] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:19:57,191] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:19:57,191] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 120, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:19:57,191] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:21:58,429] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:21:58,430] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:21:58,430] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 22, in discover_devices
    raise BluetoothError ("error communicating with local "
BluetoothError: error communicating with local bluetooth adapter
[2019-10-30 18:21:58,431] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:21:58,431] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:21:58,431] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f743f32b6f0>
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:21:58,432] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:21:58,432] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:21:58,433] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:24:07,297] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:24:07,298] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:24:18,625] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:18,627] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:18,629] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 18:24:32,795] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:32,796] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:32,797] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 18:24:45,538] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:45,540] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:45,541] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 18:24:57,131] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:24:57,132] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:24:57,133] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:25:08,521] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 6 attempt
[2019-10-30 18:25:08,831] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 18:25:08,833] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:25:08,833] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:25:08,834] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc4583b86f0>
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:25:08,835] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:25:08,836] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:25:08,836] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:25:46,718] : [INFO] : [bleClientLogger] : [bleSender.py] : [<module>] : Setup logging configuration
[2019-10-30 18:25:46,718] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Searching for  Bluetooth services ...
[2019-10-30 18:25:59,821] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:25:59,822] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:25:59,823] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 2 attempt
[2019-10-30 18:26:12,671] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:12,672] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:12,673] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 3 attempt
[2019-10-30 18:26:26,848] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:26,848] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:26,849] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 4 attempt
[2019-10-30 18:26:40,840] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : ADRESS	: None
[2019-10-30 18:26:40,841] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : UUID	: 4b0164aa-1820-444e-83d4-3c702cfec373
[2019-10-30 18:26:40,842] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Re-connecting  Bluetooth services : 5 attempt
[2019-10-30 18:26:45,445] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothServices] : Couldn't find the RaspberryPi Bluetooth service : Invalid uuid
Traceback (most recent call last):
  File "bleSender.py", line 54, in getBluetoothServices
    bleService = find_service( uuid = self.uuid, address = self.addr )
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 186, in find_service
    devices = discover_devices ()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 19, in discover_devices
    results = _bt.hci_inquiry (sock, duration=duration, flush_cache=True)
KeyboardInterrupt
[2019-10-30 18:26:45,449] : [INFO] : [bleClientLogger] : [bleSender.py] : [getBluetoothSocket] : Bluetooth client socket successfully created for RFCOMM service  ...
[2019-10-30 18:26:45,450] : [ERROR] : [bleClientLogger] : [bleSender.py] : [getBluetoothConnection] : Failed to connect to BLAH BLAH
[2019-10-30 18:26:45,451] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fea22d7c6f0>
[2019-10-30 18:26:45,451] : [INFO] : [bleClientLogger] : [bleSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-10-30 18:26:45,452] : [INFO] : [bleClientLogger] : [bleSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-10-30 18:26:45,452] : [INFO] : [bleClientLogger] : [bleSender.py] : [sendData] : Sending data over bluetooth connection
[2019-10-30 18:26:45,453] : [ERROR] : [bleClientLogger] : [bleSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "bleSender.py", line 121, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-10-30 18:26:45,454] : [INFO] : [bleClientLogger] : [bleSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 18:26:56,934] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 18:26:56,935] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 18:27:19,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 18:27:19,903] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 18:27:19,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 18:27:19,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f909ecf0810>
[2019-10-30 18:27:19,905] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 18:27:19,906] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 18:27:19,906] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-10-30 19:58:19,486] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-10-30 19:58:19,486] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-10-30 19:58:19,487] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-10-30 19:58:45,751] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-10-30 19:58:45,808] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-10-30 19:58:45,809] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-10-30 19:58:45,809] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f99cc8b7810>
[2019-10-30 19:58:45,810] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-10-30 19:58:45,811] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-10-30 19:58:45,811] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-04 15:02:48,113] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 15:02:48,114] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 15:02:48,114] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 15:02:48,115] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 15:03:37,865] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('B8:27:EB:B6:74:28', 1)
[2019-11-04 15:03:37,896] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [recvData] : Data received successfully over bluetooth connection
[2019-11-04 15:03:37,898] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Serialized string converted successfully to object
[2019-11-04 15:03:37,899] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fd1e48d7810>
[2019-11-04 15:03:37,901] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 15:03:37,902] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 15:03:37,904] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-04 20:13:45,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:13:45,869] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:13:45,870] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:13:45,893] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:15:22,206] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-04 20:15:22,212] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:15:22,214] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7fa83fb57810>
[2019-11-04 20:15:22,215] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:15:22,216] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:15:22,217] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:15:23,180] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:15:23,181] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:15:23,181] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:15:23,182] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:15:55,860] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-04 20:15:55,864] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:15:55,866] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f019016b810>
[2019-11-04 20:15:55,867] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:15:55,868] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:15:55,869] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Failed to close the bluetooth sockets 
Traceback (most recent call last):
  File "bleReceiver.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [__init__] : serverSocket is None
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-04 20:15:57,148] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-04 20:15:57,149] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-04 20:16:49,822] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-04 20:16:49,881] : [ERROR] : [bleServerLogger] : [bleReceiver.py] : [deserializedData] : Failed to de-serialized string ... 
Traceback (most recent call last):
  File "bleReceiver.py", line 119, in deserializedData
    self.dataObj=pickle.loads(_dataRecv)
TypeError: loads() argument 1 must be string, not None
[2019-11-04 20:16:49,884] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully opened to <open file 'text.json', mode 'w' at 0x7f7579aa0810>
[2019-11-04 20:16:49,885] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : Content dumped successfully to the text.json file
[2019-11-04 20:16:49,886] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [writeJsonFile] : text.json file successfully closed
[2019-11-04 20:16:49,887] : [INFO] : [bleServerLogger] : [bleReceiver.py] : [closeBluetoothSocket] : Bluetooth sockets successfully closed ...
[2019-11-05 01:05:10,520] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 01:05:10,521] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 01:05:10,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 01:05:10,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 01:05:10,525] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 01:06:36,348] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 01:06:36,349] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1c7795f810>
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 01:06:36,350] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 01:06:36,852] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 164, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 01:06:36,855] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 01:12:28,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 01:12:28,470] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 01:12:28,470] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 01:12:34,806] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 01:12:34,806] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc39de33810>
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 01:12:34,807] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 01:12:35,308] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 121, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 01:12:35,309] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 11:51:28,709] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 11:51:28,710] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 11:51:28,711] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 11:51:28,712] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 11:51:28,712] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 11:51:28,713] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 11:51:28,714] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 11:52:06,957] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 11:52:06,959] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 11:52:06,959] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd5b1a6b810>
[2019-11-05 11:52:06,960] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 11:52:06,961] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 11:52:06,962] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 11:52:07,464] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 121, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 11:52:07,467] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 13:46:59,920] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 13:46:59,920] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 13:46:59,920] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 13:46:59,920] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 13:46:59,920] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 13:46:59,921] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 13:46:59,921] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 13:49:03,200] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 13:49:03,201] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 13:49:03,202] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff6615a4810>
[2019-11-05 13:49:03,203] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 13:49:03,204] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 13:49:03,204] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 13:49:03,706] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 13:49:03,707] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 13:49:03,710] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 13:52:11,368] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 13:52:11,368] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 13:52:11,369] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 13:52:11,369] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 13:52:11,369] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 13:52:11,369] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 13:52:11,370] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 13:52:17,591] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 13:52:17,593] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 13:52:17,594] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4353ece810>
[2019-11-05 13:52:17,595] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 13:52:17,596] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 13:52:17,598] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 13:52:18,099] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 13:52:18,100] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 13:52:18,101] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 13:53:16,185] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 13:53:16,186] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 13:53:16,186] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 13:53:16,186] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 13:53:16,186] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 13:53:16,187] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 13:53:16,187] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 13:53:19,293] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 13:53:19,293] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 13:53:19,294] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f63674a9810>
[2019-11-05 13:53:19,294] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 13:53:19,294] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 13:53:19,295] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 13:53:19,795] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 13:53:19,797] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 13:53:19,798] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 13:53:19,802] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:03:00,863] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:03:00,863] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:03:00,863] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:03:00,863] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:03:00,864] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:03:00,864] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:03:00,864] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:03:06,840] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:03:06,840] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:03:06,841] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbcf9f6e810>
[2019-11-05 14:03:06,841] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:03:06,841] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:03:06,841] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:03:07,342] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:03:07,344] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:03:07,345] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:03:07,348] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:10:50,232] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:10:50,232] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:10:50,232] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:10:50,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:10:50,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:10:50,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:10:50,233] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:10:54,082] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:10:54,082] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:10:54,082] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f70de6de810>
[2019-11-05 14:10:54,083] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:10:54,083] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:10:54,083] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:10:54,585] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:10:54,586] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:10:54,587] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:10:54,591] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:13:50,466] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:13:50,466] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:13:50,466] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:13:50,466] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:13:50,466] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:13:50,467] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:13:50,467] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:14:50,920] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:14:50,921] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:14:50,922] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fcff1bb9810>
[2019-11-05 14:14:50,922] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:14:50,922] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:14:50,923] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:14:51,424] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:14:51,425] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:15:59,161] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:15:59,161] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:16:11,856] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:16:11,856] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:16:11,856] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:16:11,857] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:16:11,857] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:16:11,857] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:16:11,857] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:16:21,864] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:16:21,866] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:16:21,866] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f9241882810>
[2019-11-05 14:16:21,867] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:16:21,868] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:16:21,868] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:16:22,370] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:16:22,371] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:22:35,317] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:22:35,318] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:22:47,577] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:22:47,577] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:22:47,578] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:22:47,578] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:22:47,579] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:22:47,579] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:22:47,580] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:22:54,846] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:22:54,848] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:22:54,849] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f6d0e53a810>
[2019-11-05 14:22:54,850] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:22:54,851] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:22:54,852] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:22:55,353] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:22:55,354] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:22:55,355] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:22:55,358] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:39:32,295] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:39:32,296] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:39:32,296] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:39:32,296] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:39:32,296] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:39:32,296] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:39:32,297] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:39:40,979] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:39:40,980] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:39:40,981] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f73b745a810>
[2019-11-05 14:39:40,982] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:39:40,983] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:39:40,984] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:39:41,486] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:39:41,487] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:39:41,487] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:39:41,489] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 14:57:02,687] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 14:57:02,687] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 14:57:02,687] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 14:57:02,687] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 14:57:02,687] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 14:57:02,688] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 14:57:02,688] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 14:58:48,964] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 14:58:48,966] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 14:58:48,967] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f3acb790810>
[2019-11-05 14:58:48,968] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 14:58:48,969] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 14:58:48,970] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 14:58:49,471] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 14:58:49,471] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 14:58:49,472] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 14:58:49,472] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 15:01:47,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 15:01:47,426] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 15:02:02,585] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 15:02:02,587] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 15:02:02,588] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff023f34810>
[2019-11-05 15:02:02,589] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 15:02:02,591] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 15:02:02,592] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 15:02:03,095] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 15:02:03,096] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 15:02:03,097] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 15:02:03,100] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 15:04:34,955] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 15:04:34,955] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 15:04:34,955] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 15:04:34,955] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 15:04:34,956] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 15:04:34,956] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 15:04:34,956] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 15:04:45,796] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 15:04:45,797] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 15:04:45,798] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f6d6198b810>
[2019-11-05 15:04:45,799] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 15:04:45,800] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 15:04:45,801] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 15:04:46,304] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 15:04:46,304] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 15:04:46,304] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 15:04:46,305] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-05 15:05:04,768] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-05 15:05:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-05 15:05:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-05 15:05:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-05 15:05:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-05 15:05:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-05 15:05:04,770] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-05 15:05:11,423] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-05 15:05:11,424] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-05 15:05:11,425] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2e0f5a1810>
[2019-11-05 15:05:11,426] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-05 15:05:11,427] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-05 15:05:11,428] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-05 15:05:11,930] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-05 15:05:11,931] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-05 15:05:11,933] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-05 15:05:11,937] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 13:01:39,385] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 13:01:39,387] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 13:01:39,387] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 13:01:39,388] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 13:01:39,389] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 13:01:39,389] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 13:01:39,390] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 13:01:49,072] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 13:01:49,073] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 13:01:49,073] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f83684b1810>
[2019-11-12 13:01:49,074] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 13:01:49,075] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 13:01:49,076] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 13:01:49,577] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 13:01:49,577] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 13:10:35,505] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 13:10:35,509] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 13:11:02,358] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 13:11:02,358] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 13:11:02,359] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 13:11:02,359] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 13:11:02,360] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 13:11:02,360] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 13:11:02,361] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 13:11:15,960] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 13:11:15,961] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 13:11:15,962] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc3cfd76810>
[2019-11-12 13:11:15,962] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 13:11:15,963] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 13:11:15,963] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 13:11:16,464] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 13:11:16,465] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 13:12:26,247] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 13:12:26,248] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 13:12:26,249] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 13:12:26,249] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 13:12:26,250] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 13:12:26,250] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 13:12:26,251] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 13:12:39,787] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 13:12:39,788] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 13:12:39,789] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbb1f73d810>
[2019-11-12 13:12:39,789] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 13:12:39,790] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 13:12:39,790] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 13:12:40,291] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 13:12:40,292] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 13:51:36,612] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 13:51:36,614] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:19:03,575] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:19:03,576] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:19:03,576] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:19:03,576] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:19:03,576] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:19:03,577] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:19:03,578] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:20:17,850] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:20:17,850] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:20:17,850] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f229e67c810>
[2019-11-12 14:20:17,851] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:20:17,851] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:20:17,851] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:20:18,352] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:20:18,352] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 14:21:00,883] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 14:21:00,887] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:21:15,358] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:21:15,358] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:21:15,358] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:21:15,358] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:21:15,359] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:21:15,359] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:21:15,359] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:21:41,082] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:21:41,082] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:21:41,083] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb2aa88a810>
[2019-11-12 14:21:41,083] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:21:41,083] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:21:41,083] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:21:41,584] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:21:41,586] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 14:23:52,741] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 14:23:52,741] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:23:56,309] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:23:56,309] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:23:56,309] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:23:56,309] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:23:56,309] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:23:56,310] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:23:56,310] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:24:12,159] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:24:12,159] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:24:12,160] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4dcd5ad810>
[2019-11-12 14:24:12,160] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:24:12,160] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:24:12,161] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:24:12,661] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:24:12,663] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 14:29:27,827] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 14:29:27,827] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:34:34,585] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:34:34,586] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:34:34,586] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:34:34,587] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:34:34,587] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:34:34,587] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:34:34,588] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:36:06,459] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:36:06,459] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:36:06,460] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd83fc1e810>
[2019-11-12 14:36:06,461] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:36:06,461] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:36:06,461] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:36:06,962] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:36:06,962] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 14:42:05,099] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 14:42:05,104] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:42:33,362] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:42:33,363] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:42:33,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:42:33,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:42:33,364] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:42:33,364] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:42:33,366] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:42:36,866] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:42:36,867] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:42:36,868] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4b9cac5810>
[2019-11-12 14:42:36,868] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:42:36,868] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:42:36,869] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:42:37,369] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:42:37,371] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 14:42:37,372] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 14:42:37,374] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 14:49:21,349] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 14:49:21,350] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 14:49:21,351] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 14:49:21,351] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 14:49:21,352] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 14:49:21,352] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 14:49:21,353] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 14:49:35,465] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 14:49:35,466] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 14:49:35,466] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff95a4ac810>
[2019-11-12 14:49:35,467] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 14:49:35,468] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 14:49:35,468] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 14:49:35,969] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 14:49:35,971] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 15:13:31,514] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 15:13:31,514] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 15:13:31,515] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 15:13:31,515] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 15:13:31,515] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 15:13:31,515] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 15:13:31,516] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 15:13:57,256] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 15:13:57,257] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 15:13:57,258] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7facd801c810>
[2019-11-12 15:13:57,259] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 15:13:57,259] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 15:13:57,260] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 15:13:57,762] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 15:13:57,763] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 15:22:19,137] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 15:22:19,139] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 15:22:33,517] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 15:22:33,518] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 15:22:33,518] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 15:22:33,518] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 15:22:33,518] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 15:22:33,519] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 15:22:33,519] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 15:22:53,047] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 15:22:53,048] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 15:22:53,049] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fdd804c1810>
[2019-11-12 15:22:53,050] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 15:22:53,051] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 15:22:53,052] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 15:22:53,553] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 15:22:53,554] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 15:22:53,555] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 15:22:53,558] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-12 15:27:15,281] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-12 15:27:15,281] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-12 15:27:15,281] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-12 15:27:15,281] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-12 15:27:15,282] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-12 15:27:15,282] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-12 15:27:15,282] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-12 15:27:44,226] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-12 15:27:44,226] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-12 15:27:44,226] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb83a010810>
[2019-11-12 15:27:44,227] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-12 15:27:44,227] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-12 15:27:44,227] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-12 15:27:44,728] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-12 15:27:44,729] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-12 15:27:44,730] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-12 15:27:44,733] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:15:13,553] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:15:13,554] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:15:13,554] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:15:13,554] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:15:13,555] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:15:13,555] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:15:13,556] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:15:20,069] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 11:15:20,072] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:15:20,072] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbd50c05810>
[2019-11-13 11:15:20,073] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:15:20,073] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:15:20,074] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:15:20,074] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 11:15:20,075] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 11:37:55,636] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:37:55,637] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:37:55,638] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:37:55,638] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:37:55,639] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:37:55,639] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:37:55,640] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:38:50,861] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 11:38:50,863] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:38:50,863] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe504662810>
[2019-11-13 11:38:50,864] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:38:50,864] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:38:50,865] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:38:50,865] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 11:38:50,866] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 11:40:39,757] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:40:39,757] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:40:39,758] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:40:39,758] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:40:39,759] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:40:39,759] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:40:39,760] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:40:40,960] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 11:40:40,962] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:40:40,963] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f622f4ec810>
[2019-11-13 11:40:40,963] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:40:40,963] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:40:40,964] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:40:40,964] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 11:40:40,965] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 11:40:43,829] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:40:43,829] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:40:43,830] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:40:43,830] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:40:43,831] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:40:43,831] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:40:43,832] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:41:35,987] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:41:35,988] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:41:35,988] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:41:35,989] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:41:35,990] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:41:35,990] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 2
[2019-11-13 11:41:35,991] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:45:51,426] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 11:45:51,427] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:45:51,428] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fde46fd1810>
[2019-11-13 11:45:51,428] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:45:51,429] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:45:51,429] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:45:51,931] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:45:51,932] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:45:51,932] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:45:51,934] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:46:03,004] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 2)
[2019-11-13 11:46:03,005] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:46:03,006] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fa25de7b810>
[2019-11-13 11:46:03,006] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:46:03,007] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:46:03,007] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:46:03,508] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:46:03,509] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:46:03,510] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:46:03,511] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:47:20,504] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:47:20,505] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:47:20,506] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:47:20,506] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:47:20,507] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:47:20,507] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:47:20,508] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:47:25,914] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:47:25,915] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:47:25,916] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:47:25,916] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:47:25,917] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:47:25,917] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 2
[2019-11-13 11:47:25,918] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:47:39,645] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 11:47:39,646] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:47:39,646] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f83e598c810>
[2019-11-13 11:47:39,647] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:47:39,647] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:47:39,647] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:47:40,149] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:47:40,149] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:47:40,150] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:47:40,151] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:47:58,061] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:47:58,062] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:47:58,063] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:47:58,065] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:47:58,067] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:47:58,068] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:47:58,069] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:48:14,970] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 11:48:14,971] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:48:14,971] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f43bbdd4810>
[2019-11-13 11:48:14,972] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:48:14,972] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:48:14,973] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:48:15,474] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:48:15,475] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:48:15,476] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:48:15,478] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:50:51,453] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:50:51,454] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:50:51,454] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:50:51,455] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:50:51,455] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:50:51,456] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:50:51,456] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:50:52,459] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 11:50:52,460] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:50:52,461] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0fc0f63810>
[2019-11-13 11:50:52,462] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:50:52,462] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:50:52,463] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:50:52,965] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:50:52,966] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:50:52,967] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:50:52,969] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:50:56,999] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:50:57,000] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:50:57,000] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:50:57,001] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:50:57,001] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:50:57,001] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:50:57,002] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:51:05,218] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 11:51:05,219] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:51:05,219] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f443f021810>
[2019-11-13 11:51:05,220] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:51:05,221] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:51:05,221] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:51:05,723] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:51:05,724] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:51:05,725] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:51:05,727] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:51:25,471] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:51:25,472] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:51:25,472] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:51:25,473] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:51:25,474] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:51:25,474] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:51:25,475] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:56:01,400] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-13 11:56:01,401] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:56:01,402] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f330a8de810>
[2019-11-13 11:56:01,403] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:56:01,404] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:56:01,405] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:56:01,906] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:56:01,907] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:56:01,908] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 11:56:01,909] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 11:57:01,764] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:57:01,766] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:57:01,766] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:57:01,768] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:57:01,769] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:57:01,770] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:57:01,772] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:57:31,132] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('CC:21:19:93:F6:EA', 1)
[2019-11-13 11:57:31,133] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:57:31,133] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f205569e810>
[2019-11-13 11:57:31,134] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:57:31,134] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:57:31,135] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:57:31,636] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 11:57:31,637] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 11:58:35,390] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 11:58:35,393] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:58:35,394] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f89652c8810>
[2019-11-13 11:58:35,395] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:58:35,395] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:58:35,396] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:58:35,397] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 11:58:35,399] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 11:58:40,255] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:58:40,255] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:58:40,256] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:58:40,256] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:58:40,257] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:58:40,257] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:58:40,258] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 11:59:38,670] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 11:59:38,673] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 11:59:38,673] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f06982bb810>
[2019-11-13 11:59:38,674] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 11:59:38,675] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 11:59:38,675] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 11:59:38,676] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 11:59:38,677] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 11:59:39,520] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 11:59:39,521] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 11:59:39,521] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 11:59:39,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 11:59:39,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 11:59:39,522] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 11:59:39,523] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:09:19,481] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 12:09:19,483] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:09:19,484] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2b3e6b1810>
[2019-11-13 12:09:19,485] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:09:19,485] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:09:19,486] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:09:19,486] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 12:09:19,488] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 12:09:20,894] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:09:20,895] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:09:20,895] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:09:20,896] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:09:20,896] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:09:20,896] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:09:20,897] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:09:42,779] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:09:42,781] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:09:42,781] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f7b2d61c810>
[2019-11-13 12:09:42,782] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:09:42,783] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:09:42,784] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:09:43,285] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:09:43,286] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:09:43,287] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:09:43,289] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:10:23,866] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:10:23,867] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:10:23,867] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:10:23,868] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:10:23,868] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:10:23,869] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:10:23,870] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:11:51,168] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 12:11:51,172] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:11:51,174] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd2beb84810>
[2019-11-13 12:11:51,175] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:11:51,175] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:11:51,176] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:11:51,177] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 12:11:51,178] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 12:11:52,578] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:11:52,579] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:11:52,580] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:11:52,581] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:11:52,582] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:11:52,583] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:11:52,584] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:13:11,455] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:13:11,456] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:13:11,457] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1bd99bf810>
[2019-11-13 12:13:11,457] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:13:11,457] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:13:11,458] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:13:11,959] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:13:11,960] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:13:11,961] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:13:11,962] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:14:25,012] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:14:25,012] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:14:25,013] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:14:25,014] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:14:25,014] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:14:25,015] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:14:25,016] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:16:33,986] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 12:16:33,989] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:16:33,990] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbf5172a810>
[2019-11-13 12:16:33,991] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:16:33,992] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:16:33,992] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:16:33,993] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 12:16:33,995] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 12:16:35,253] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:16:35,254] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:16:35,254] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:16:35,255] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:16:35,255] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:16:35,256] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:16:35,257] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:16:42,138] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:16:42,139] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:16:42,140] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd2d1626810>
[2019-11-13 12:16:42,140] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:16:42,141] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:16:42,141] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:16:42,642] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:16:42,643] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:16:42,644] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:16:42,646] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:17:41,826] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:17:41,826] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:17:41,826] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:17:41,827] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:17:41,827] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:17:41,827] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:17:41,828] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:17:56,260] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:17:56,261] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:17:56,261] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f29b9ad7810>
[2019-11-13 12:17:56,262] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:17:56,262] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:17:56,263] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:17:56,765] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:17:56,766] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:18:59,143] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:18:59,143] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:18:59,144] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:18:59,145] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:18:59,145] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:18:59,146] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:18:59,147] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:21:35,860] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 12:21:35,863] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:21:35,864] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4e3a514810>
[2019-11-13 12:21:35,865] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:21:35,866] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:21:35,867] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:21:35,868] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 12:21:35,870] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 140, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 12:21:37,121] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:21:37,122] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:21:37,122] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:21:37,123] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:21:37,123] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:21:37,124] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:21:37,125] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:23:41,884] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:23:41,885] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:23:41,885] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff185191810>
[2019-11-13 12:23:41,886] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:23:41,886] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:23:41,886] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:23:42,388] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:23:42,389] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:24:37,642] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:24:37,645] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:25:01,594] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:25:01,594] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:25:01,595] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:25:01,595] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:25:01,596] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:25:01,596] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:25:01,597] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:25:53,679] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 12:25:53,681] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:25:53,681] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb781168810>
[2019-11-13 12:25:53,682] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:25:53,682] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:25:53,682] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:25:53,683] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 12:25:53,684] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 12:25:55,589] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:25:55,590] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:25:55,591] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:25:55,592] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:25:55,592] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:25:55,593] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:25:55,594] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:26:07,895] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:26:07,896] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:26:07,896] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5a45c39810>
[2019-11-13 12:26:07,897] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:26:07,898] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:26:07,898] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:26:08,399] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:26:08,400] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:31:49,566] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:31:49,568] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:32:53,263] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:32:53,264] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:32:53,264] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:32:53,265] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:32:53,265] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:32:53,266] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:32:53,267] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:33:08,825] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:33:08,825] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:33:08,826] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f940a402810>
[2019-11-13 12:33:08,827] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:33:08,827] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:33:08,828] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:33:09,329] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:33:09,330] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:33:09,331] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:33:09,333] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:33:45,032] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:33:45,032] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:33:45,033] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:33:45,033] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:33:45,034] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:33:45,034] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:33:45,035] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:34:41,012] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:34:41,013] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:34:41,014] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f86d4064810>
[2019-11-13 12:34:41,014] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:34:41,015] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:34:41,015] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:34:41,517] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:34:41,517] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:34:41,518] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:34:41,520] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:35:20,926] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:35:20,927] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:35:20,927] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:35:20,928] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:35:20,928] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:35:20,928] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:35:20,929] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:35:52,086] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:35:52,087] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:35:52,087] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f138519b810>
[2019-11-13 12:35:52,088] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:35:52,089] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:35:52,089] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:35:52,590] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:35:52,591] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:36:29,725] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:36:29,726] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:36:29,726] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:36:29,727] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:36:29,727] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:36:29,728] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:36:29,729] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:36:39,051] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:36:39,052] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:36:39,052] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0e0f5d8810>
[2019-11-13 12:36:39,053] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:36:39,053] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:36:39,054] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:36:39,555] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:36:39,556] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:37:05,283] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:37:05,285] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:39:21,163] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:39:21,164] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:39:21,164] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:39:21,165] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:39:21,165] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:39:21,166] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:39:21,167] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:39:33,396] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:39:33,397] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:39:33,398] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2d8e87b810>
[2019-11-13 12:39:33,398] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:39:33,399] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:39:33,399] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:39:33,901] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:39:33,901] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:39:50,374] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:39:50,374] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:39:50,375] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:39:50,376] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:39:50,376] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:39:50,377] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:39:50,378] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:40:08,905] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:40:08,906] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:40:08,907] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f65cc28e810>
[2019-11-13 12:40:08,907] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:40:08,908] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:40:08,909] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:40:09,410] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:40:09,411] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:40:09,412] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:40:09,414] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:43:35,867] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:43:35,867] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:43:35,868] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:43:35,869] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:43:35,869] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:43:35,869] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:43:35,870] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:43:49,244] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:43:49,245] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:43:49,246] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f63b5cc0810>
[2019-11-13 12:43:49,246] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:43:49,247] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:43:49,247] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:43:49,749] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:43:49,750] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:43:49,750] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:43:49,752] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:45:02,473] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:45:02,474] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:45:02,474] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:45:02,475] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:45:02,475] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:45:02,476] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:45:02,476] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:45:59,891] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:45:59,892] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:45:59,893] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2c606cd810>
[2019-11-13 12:45:59,894] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:45:59,894] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:45:59,895] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:46:00,396] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:46:00,397] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:46:14,910] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:46:14,911] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:46:23,878] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:46:23,879] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:46:23,880] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:46:23,880] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:46:23,881] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:46:23,881] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:46:23,882] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:46:29,334] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:46:29,335] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:46:29,336] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2c346e5810>
[2019-11-13 12:46:29,336] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:46:29,337] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:46:29,338] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:46:29,839] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:46:29,840] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:46:52,317] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:46:52,318] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:47:00,796] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:47:00,796] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:47:00,797] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:47:00,797] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:47:00,798] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:47:00,798] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:47:00,799] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:47:09,016] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 12:47:09,017] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:47:09,017] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f50bd327810>
[2019-11-13 12:47:09,018] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:47:09,018] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:47:09,019] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:47:09,520] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:47:09,521] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:47:09,522] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:47:09,525] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:47:45,756] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:47:45,756] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:47:45,757] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:47:45,758] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:47:45,758] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:47:45,759] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:47:45,760] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:48:21,797] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:48:21,798] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:48:21,799] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f14134e1810>
[2019-11-13 12:48:21,799] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:48:21,800] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:48:21,801] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:48:22,302] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:48:22,303] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:48:27,268] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:48:27,270] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:49:12,584] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:49:12,585] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:49:12,586] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:49:12,586] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:49:12,587] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:49:12,587] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:49:12,588] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:49:30,906] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:49:30,907] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:49:30,907] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f865573a810>
[2019-11-13 12:49:30,907] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:49:30,908] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:49:30,908] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:49:31,409] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:49:31,410] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:49:32,230] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:49:32,232] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:50:40,308] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:50:40,308] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:50:40,309] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:50:40,310] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:50:40,310] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:50:40,310] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:50:40,311] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:50:57,989] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:50:57,990] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:50:57,991] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fcfb7ed0810>
[2019-11-13 12:50:57,992] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:50:57,993] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:50:57,993] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:50:58,495] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:50:58,495] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:51:03,635] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:51:03,637] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 12:58:11,706] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 12:58:11,707] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 12:58:11,707] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 12:58:11,708] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 12:58:11,708] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 12:58:11,709] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 12:58:11,710] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 12:58:24,749] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 12:58:24,749] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 12:58:24,750] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd53aaad810>
[2019-11-13 12:58:24,751] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 12:58:24,752] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 12:58:24,752] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 12:58:25,254] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 12:58:25,255] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 12:59:08,215] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 12:59:08,217] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:01:33,684] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:01:33,685] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:01:33,685] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:01:33,686] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:01:33,686] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:01:33,687] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:01:33,688] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:01:34,028] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 13:01:34,031] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:01:34,032] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff7bea1b810>
[2019-11-13 13:01:34,034] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:01:34,035] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:01:34,036] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:01:34,037] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 13:01:34,038] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 13:01:35,657] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:01:35,657] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:01:35,658] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:01:35,659] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:01:35,659] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:01:35,660] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:01:35,660] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:01:45,983] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:01:45,983] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:01:45,984] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f7655e75810>
[2019-11-13 13:01:45,985] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:01:45,985] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:01:45,986] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:01:46,487] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:01:46,487] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:01:46,488] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:01:46,490] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:01:57,646] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:01:57,647] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:01:57,647] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:01:57,648] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:01:57,648] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:01:57,649] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:01:57,650] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:03:54,245] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 13:03:54,247] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:03:54,248] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f43bd767810>
[2019-11-13 13:03:54,248] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:03:54,249] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:03:54,250] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:03:54,250] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 13:03:54,252] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 13:03:56,108] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:03:56,108] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:03:56,109] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:03:56,110] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:03:56,110] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:03:56,111] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:03:56,112] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:04:02,965] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:04:02,966] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:04:02,966] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f876e1be810>
[2019-11-13 13:04:02,967] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:04:02,968] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:04:02,969] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:04:03,470] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:04:03,471] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:16:15,583] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:16:15,586] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:16:48,261] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:16:48,261] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:16:48,261] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:16:48,261] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:16:48,262] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:16:48,262] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:16:48,262] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:16:54,850] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:16:54,850] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:16:54,850] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe68a2d1810>
[2019-11-13 13:16:54,851] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:16:54,851] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:16:54,851] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:16:55,352] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:16:55,353] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:16:55,354] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:16:55,357] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:17:05,193] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:17:05,193] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:17:05,194] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:17:05,194] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:17:05,194] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:17:05,194] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:17:05,194] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:17:46,429] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 13:17:46,433] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:17:46,434] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fbee6de0810>
[2019-11-13 13:17:46,435] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:17:46,436] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:17:46,436] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:17:46,437] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 13:17:46,438] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 13:17:47,489] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:17:47,489] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:17:47,489] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:17:47,489] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:17:47,490] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:17:47,490] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:17:47,490] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:17:53,795] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:17:53,796] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:17:53,797] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f3df7036810>
[2019-11-13 13:17:53,798] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:17:53,799] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:17:53,800] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:17:54,301] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:17:54,303] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:17:54,304] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:17:54,306] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:18:05,937] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:18:05,937] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:18:05,938] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:18:05,938] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:18:05,938] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:18:05,938] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:18:05,938] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:28:33,236] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 13:28:33,240] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:28:33,241] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f82f22c0810>
[2019-11-13 13:28:33,242] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:28:33,243] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:28:33,244] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:28:33,244] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 13:28:33,246] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 13:28:34,456] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:28:34,456] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:28:34,457] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:28:34,457] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:28:34,457] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:28:34,457] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:28:34,458] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:28:39,015] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:28:39,017] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:28:39,018] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7efdfd872810>
[2019-11-13 13:28:39,019] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:28:39,019] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:28:39,020] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:28:39,522] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:28:39,523] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:28:39,524] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:28:39,528] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:33:21,641] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:33:21,642] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:33:21,642] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:33:21,642] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:33:21,643] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:33:21,643] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:33:21,644] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:33:33,417] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:33:33,418] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:33:33,418] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7feac3977810>
[2019-11-13 13:33:33,418] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:33:33,419] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:33:33,419] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:33:33,921] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:33:33,922] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:33:33,923] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:33:33,926] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:38:38,756] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:38:38,756] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:38:38,756] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:38:38,756] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:38:38,756] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:38:38,757] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:38:38,757] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:38:59,664] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 13:38:59,665] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:38:59,665] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd92e9fc810>
[2019-11-13 13:38:59,665] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:38:59,665] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:38:59,666] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:39:00,167] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:39:00,168] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:39:06,935] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:39:06,938] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:42:27,178] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:42:27,178] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:42:27,178] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:42:27,178] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:42:27,178] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:42:27,179] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:42:27,179] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:42:36,079] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:42:36,080] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:42:36,080] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f186a6a4810>
[2019-11-13 13:42:36,081] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:42:36,082] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:42:36,082] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:42:36,583] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:42:36,583] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:42:36,584] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:42:36,584] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:43:41,945] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:43:41,945] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:43:41,946] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:43:41,946] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:43:41,946] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:43:41,946] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:43:41,946] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:43:45,289] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 13:43:45,291] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:43:45,293] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2ae96ef810>
[2019-11-13 13:43:45,294] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:43:45,296] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:43:45,297] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:43:45,799] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:43:45,800] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:43:52,205] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:43:52,208] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:43:54,029] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:43:54,030] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:43:54,030] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:43:54,030] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:43:54,030] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:43:54,031] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:43:54,031] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:44:05,747] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 13:44:05,748] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:44:05,750] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f8fe5531810>
[2019-11-13 13:44:05,751] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:44:05,752] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:44:05,753] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:44:06,255] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:44:06,256] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:44:32,162] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:44:32,165] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:49:10,970] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:49:10,970] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:49:10,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:49:10,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:49:10,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:49:10,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:49:10,971] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:49:21,949] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:49:21,949] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:49:21,950] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fdc159de810>
[2019-11-13 13:49:21,950] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:49:21,950] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:49:21,950] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:49:22,452] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:49:22,454] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:49:51,300] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:49:51,302] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:52:35,271] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:52:35,271] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:52:35,271] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:52:35,272] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:52:35,272] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:52:35,272] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:52:35,272] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:53:00,060] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 13:53:00,064] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:53:00,065] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f89bdcad810>
[2019-11-13 13:53:00,066] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:53:00,067] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:53:00,068] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:53:00,069] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 13:53:00,071] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 13:53:00,737] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:53:00,737] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:53:00,737] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:53:00,738] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:53:00,738] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:53:00,738] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:53:00,738] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:53:29,016] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:53:29,017] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:53:29,017] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f65b9136810>
[2019-11-13 13:53:29,017] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:53:29,018] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:53:29,018] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:53:29,519] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:53:29,521] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:54:11,144] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:54:11,147] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 13:54:42,450] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:54:42,451] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:54:42,451] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:54:42,451] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:54:42,451] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:54:42,452] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:54:42,452] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:54:57,660] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 13:54:57,661] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:54:57,662] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7febb078a810>
[2019-11-13 13:54:57,664] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:54:57,665] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:54:57,667] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:54:58,168] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:54:58,170] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:59:22,423] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 13:59:22,423] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 13:59:22,423] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 13:59:22,423] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 13:59:22,424] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 13:59:22,424] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 13:59:22,424] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 13:59:33,675] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 13:59:33,677] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 13:59:33,677] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0e9e5d9810>
[2019-11-13 13:59:33,678] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 13:59:33,679] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 13:59:33,680] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 13:59:34,181] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 13:59:34,182] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 13:59:38,404] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 13:59:38,407] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:00:56,063] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:00:56,063] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:00:56,063] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:00:56,063] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:00:56,063] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:00:56,064] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:00:56,064] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:01:43,173] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:01:43,173] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:01:43,174] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb402f6c810>
[2019-11-13 14:01:43,174] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:01:43,174] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:01:43,175] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:01:43,676] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:01:43,677] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:01:43,679] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:01:43,682] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:03:27,749] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:03:27,750] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:03:46,057] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:03:46,057] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:03:46,058] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f29bee5c810>
[2019-11-13 14:03:46,058] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:03:46,058] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:03:46,058] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:03:46,559] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:03:46,560] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:03:46,560] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:03:46,561] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:03:49,048] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:03:49,049] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:03:49,049] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:03:49,049] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:03:49,049] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:03:49,049] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:03:49,050] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:05:06,561] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:05:06,562] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:05:06,564] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f879a6a5810>
[2019-11-13 14:05:06,565] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:05:06,566] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:05:06,567] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:05:07,069] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:05:07,070] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:05:11,729] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:05:11,732] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:10:05,781] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:10:05,781] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:10:05,781] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:10:05,781] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:10:05,782] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:10:05,782] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:10:05,783] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:10:12,456] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:10:12,457] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:10:12,457] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fb5785c7810>
[2019-11-13 14:10:12,457] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:10:12,457] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:10:12,458] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:10:12,959] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:10:12,960] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:10:12,961] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:10:12,965] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:10:34,024] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:10:34,024] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:10:34,024] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:10:34,024] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:10:34,025] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:10:34,025] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:10:34,025] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:10:49,632] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:10:49,633] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:10:49,633] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fada0a7b810>
[2019-11-13 14:10:49,634] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:10:49,634] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:10:49,634] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:10:50,135] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:10:50,137] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:10:55,250] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:10:55,253] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:11:40,894] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:11:40,894] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:11:40,894] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:11:40,894] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:11:40,894] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:11:40,895] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:11:40,895] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:11:46,208] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:11:46,209] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:11:46,209] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ffb10c48810>
[2019-11-13 14:11:46,210] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:11:46,210] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:11:46,210] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:11:46,711] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:11:46,713] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:11:57,443] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:11:57,443] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:11:57,444] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:11:57,444] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:11:57,444] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:11:57,444] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:11:57,445] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:13:11,892] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:13:11,895] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:13:11,897] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe885f50810>
[2019-11-13 14:13:11,899] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:13:11,901] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:13:11,903] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:13:12,417] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:13:12,419] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:13:16,644] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:13:16,647] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:15:00,772] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:15:00,772] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:15:00,772] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:15:00,772] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:15:00,772] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:15:00,773] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:15:00,773] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:15:12,338] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:15:12,338] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:15:12,339] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2110464810>
[2019-11-13 14:15:12,339] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:15:12,339] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:15:12,340] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:15:12,840] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:15:12,842] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:15:12,843] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:15:12,845] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:16:15,461] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:16:15,461] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:16:15,461] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:16:15,461] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:16:15,461] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:16:15,462] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:16:15,462] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:16:48,127] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:16:48,128] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:16:48,128] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe5b16bc810>
[2019-11-13 14:16:48,128] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:16:48,129] : [ERROR] : [bleClientLogger] : [newSender.py] : [serializeData] : Failed to convert json object  to serialized string
Traceback (most recent call last):
  File "newSender.py", line 108, in serializeData
    serializedData = pickle.dumps(self.jsonObj, "prot2")
TypeError: an integer is required
[2019-11-13 14:16:48,129] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:16:48,130] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 117, in sendData
    _serializedData =str(len(_serializedData))+ ":"+_serializedData
TypeError: object of type 'NoneType' has no len()
[2019-11-13 14:16:48,130] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:17:38,091] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:17:38,091] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:17:38,091] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:17:38,091] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:17:38,092] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:17:38,092] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:17:38,092] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:19:15,538] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:19:15,540] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:19:15,541] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2e604fe810>
[2019-11-13 14:19:15,542] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:19:15,542] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:19:15,543] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:19:16,045] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:19:16,046] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:19:20,074] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:19:20,077] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:20:35,138] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:20:35,138] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:20:35,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:20:35,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:20:35,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:20:35,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:20:35,140] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:20:51,457] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:20:51,457] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:20:51,458] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f3f8c780810>
[2019-11-13 14:20:51,458] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:20:51,459] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:20:51,459] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:20:51,960] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:20:51,961] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:20:51,963] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:20:51,966] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:21:41,606] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:21:41,606] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:21:41,606] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:21:41,607] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:21:41,607] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:21:41,607] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:21:41,607] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:21:55,494] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:21:55,495] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:21:55,495] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f01da5a2810>
[2019-11-13 14:21:55,495] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:21:55,496] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:21:55,496] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:21:55,997] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:21:55,999] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:21:56,334] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:21:56,337] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:23:04,470] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:23:04,470] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:23:04,470] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:23:04,470] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:23:04,470] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:23:04,471] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:23:04,471] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:23:16,170] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:23:16,171] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:23:16,172] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff108408810>
[2019-11-13 14:23:16,174] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:23:16,175] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:23:16,176] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:23:16,677] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:23:16,678] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:23:21,477] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:23:21,480] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:25:55,393] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:25:55,393] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:25:55,393] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:25:55,394] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:25:55,394] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:25:55,394] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:25:55,394] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:26:07,924] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:26:07,926] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:26:07,927] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5e3ac74810>
[2019-11-13 14:26:07,928] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:26:07,929] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:26:07,930] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:26:08,432] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:26:08,434] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:26:39,098] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:26:39,099] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:26:39,099] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:26:39,099] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:26:39,099] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:26:39,099] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:26:39,100] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:26:57,727] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:26:57,728] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:26:57,728] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff71717a810>
[2019-11-13 14:26:57,729] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:26:57,729] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:26:57,729] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:26:58,231] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:26:58,232] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:27:11,668] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:27:11,671] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:27:18,396] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:27:18,396] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:27:18,396] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:27:18,396] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:27:18,396] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:27:18,397] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:27:18,397] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:27:35,042] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:27:35,044] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:27:35,045] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f57a1b33810>
[2019-11-13 14:27:35,047] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:27:35,048] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:27:35,049] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:27:35,551] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:27:35,552] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:28:23,880] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:28:23,883] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:28:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:28:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:28:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:28:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:28:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:28:47,013] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:28:47,013] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:28:50,430] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:28:50,431] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:28:50,432] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f48266cd810>
[2019-11-13 14:28:50,432] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:28:50,433] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:28:50,433] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:28:50,934] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:28:50,935] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:28:55,991] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:28:55,998] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:29:38,392] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:29:38,392] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:29:38,392] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:29:38,392] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:29:38,392] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:29:38,393] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:29:38,393] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:29:58,322] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:29:58,322] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:29:58,323] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc4ca044810>
[2019-11-13 14:29:58,323] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:29:58,324] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:29:58,324] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:29:58,825] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:29:58,826] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:30:05,111] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:30:05,115] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:32:06,362] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:32:06,363] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:32:06,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:32:06,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:32:06,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:32:06,363] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:32:06,364] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:32:14,270] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:32:14,271] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:32:14,272] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd2aa3be810>
[2019-11-13 14:32:14,274] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:32:14,275] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:32:14,276] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:32:14,778] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:32:14,779] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:32:14,780] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:32:14,783] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:32:55,570] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:32:55,570] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:32:55,570] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:32:55,570] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:32:55,570] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:32:55,571] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:32:55,571] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:33:44,965] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:33:44,967] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:33:44,968] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe55afa7810>
[2019-11-13 14:33:44,969] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:33:44,970] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:33:44,971] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:33:45,472] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:33:45,473] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:33:49,534] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:33:49,537] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:37:54,695] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:37:54,696] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:37:54,696] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:37:54,696] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:37:54,696] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:37:54,696] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:37:54,697] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:37:59,776] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:37:59,777] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:37:59,777] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f91f01ea810>
[2019-11-13 14:37:59,778] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:37:59,778] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:37:59,779] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:38:00,279] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:38:00,281] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:38:04,766] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:38:04,769] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:40:17,238] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:40:17,238] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:40:17,238] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:40:17,239] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:40:17,239] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:40:17,239] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:40:17,240] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:40:24,619] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:40:24,621] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:40:24,622] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f5fe7bc5810>
[2019-11-13 14:40:24,623] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:40:24,625] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:40:24,626] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:40:25,127] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:40:25,128] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:43:55,234] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    logger.info("Sending data over bluetooth connection 3")
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:43:55,238] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:44:32,923] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:44:32,923] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:44:32,924] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:44:32,924] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:44:32,924] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:44:32,924] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:44:32,924] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:44:38,110] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:44:38,111] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:44:38,111] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fd934a2c810>
[2019-11-13 14:44:38,111] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:44:38,112] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:44:38,112] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:44:38,613] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:44:38,614] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:46:28,932] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:46:28,932] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:46:28,933] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:46:28,933] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:46:28,933] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:46:28,933] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:46:28,933] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:46:42,163] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:46:42,164] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:46:42,165] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f070519b810>
[2019-11-13 14:46:42,166] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the text.json
Traceback (most recent call last):
  File "newSender.py", line 100, in readJsonFile
    self.jsonObj = json.load(jsonFileObj)
  File "/usr/lib/python2.7/json/__init__.py", line 291, in load
    **kw)
  File "/usr/lib/python2.7/json/__init__.py", line 339, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 364, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 382, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
[2019-11-13 14:46:42,169] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:46:42,170] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:46:42,672] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:46:42,673] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:46:42,723] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:46:42,725] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:46:55,582] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:46:55,582] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:46:55,583] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:46:55,583] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:46:55,583] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:46:55,583] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:46:55,583] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:47:21,920] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 14:47:21,924] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:47:21,925] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff4553ae810>
[2019-11-13 14:47:21,926] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the text.json
Traceback (most recent call last):
  File "newSender.py", line 100, in readJsonFile
    self.jsonObj = json.load(jsonFileObj)
  File "/usr/lib/python2.7/json/__init__.py", line 291, in load
    **kw)
  File "/usr/lib/python2.7/json/__init__.py", line 339, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 364, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 382, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
[2019-11-13 14:47:21,929] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:47:21,929] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:47:21,930] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 119, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 14:47:21,931] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 142, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:47:22,837] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:47:22,838] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:47:41,798] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:47:41,799] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:47:41,800] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fa62e242810>
[2019-11-13 14:47:41,800] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the text.json
Traceback (most recent call last):
  File "newSender.py", line 100, in readJsonFile
    self.jsonObj = json.load(jsonFileObj)
  File "/usr/lib/python2.7/json/__init__.py", line 291, in load
    **kw)
  File "/usr/lib/python2.7/json/__init__.py", line 339, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 364, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 382, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
[2019-11-13 14:47:41,802] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:47:41,802] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:47:42,303] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:47:42,305] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:47:42,306] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:47:42,308] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:49:16,863] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:49:16,863] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:49:16,863] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:49:16,864] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:49:16,864] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:49:16,864] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:49:16,864] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:51:30,672] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 14:51:30,674] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:51:30,675] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f7733124810>
[2019-11-13 14:51:30,676] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:51:30,677] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:51:30,678] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:51:30,678] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 119, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 14:51:30,679] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 142, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 14:51:31,500] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:51:31,500] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:51:31,500] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:51:31,501] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:51:31,501] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:51:31,501] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:51:31,501] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:51:45,549] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('D0:B1:28:44:4A:F2', 1)
[2019-11-13 14:51:45,549] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:51:45,549] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f87b3688810>
[2019-11-13 14:51:45,549] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:51:45,550] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:51:45,550] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:51:46,051] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:51:46,052] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:51:48,414] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:51:48,417] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:51:57,631] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:51:57,631] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:51:57,631] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:51:57,632] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:51:57,632] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:51:57,632] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:51:57,632] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:52:06,054] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 14:52:06,055] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:52:06,056] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f13fa4d1810>
[2019-11-13 14:52:06,056] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:52:06,057] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:52:06,057] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:52:06,558] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:52:06,560] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:52:11,937] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:52:11,940] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 14:54:12,022] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 14:54:12,022] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 14:54:12,022] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 14:54:12,022] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 14:54:12,023] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 14:54:12,023] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 14:54:12,023] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 14:54:18,199] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-13 14:54:18,201] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 14:54:18,202] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f88fe89e810>
[2019-11-13 14:54:18,203] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 14:54:18,204] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 14:54:18,205] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 14:54:18,707] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 14:54:18,709] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 14:54:18,710] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 14:54:18,714] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 15:04:01,656] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 15:04:01,656] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 15:04:01,656] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 15:04:01,657] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 15:04:01,657] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 15:04:01,657] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 15:04:01,657] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 15:06:45,437] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 15:06:45,441] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 15:06:45,442] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fe87ca44810>
[2019-11-13 15:06:45,444] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 15:06:45,445] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 15:06:45,447] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 15:06:45,448] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 15:06:45,450] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-13 15:06:46,696] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 15:06:46,697] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 15:06:46,697] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 15:06:46,697] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 15:06:46,697] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 15:06:46,697] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 15:06:46,698] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 15:07:46,949] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 15:07:46,949] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 15:07:46,950] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fc0293cf810>
[2019-11-13 15:07:46,950] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 15:07:46,950] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 15:07:46,950] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 15:07:47,451] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 15:07:47,452] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 15:08:50,950] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 15:08:50,953] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 15:11:40,675] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 15:11:40,675] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 15:11:40,675] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 15:11:40,675] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 15:11:40,675] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 15:11:40,676] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 15:11:40,676] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 15:12:24,734] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-13 15:12:24,735] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 15:12:24,736] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f2fe6535810>
[2019-11-13 15:12:24,737] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 15:12:24,738] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 15:12:24,738] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 15:12:25,240] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-13 15:12:25,241] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-13 15:12:30,484] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-13 15:12:30,488] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-13 15:12:37,469] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-13 15:12:37,470] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-13 15:15:20,394] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-13 15:15:20,398] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-13 15:15:20,399] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7ff67570e810>
[2019-11-13 15:15:20,400] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-13 15:15:20,401] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-13 15:15:20,401] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-13 15:15:20,402] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-13 15:15:20,403] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 11:10:50,276] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 11:10:50,277] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 11:10:50,277] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 11:10:50,278] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 11:10:50,278] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 11:10:50,278] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 11:10:50,279] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 11:17:08,640] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 11:17:08,644] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 11:17:08,645] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fdbb0df5810>
[2019-11-19 11:17:08,646] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-19 11:17:08,647] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 11:17:08,648] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 11:17:08,648] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 11:17:08,649] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 11:17:09,722] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 11:17:09,722] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 11:17:09,723] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 11:17:09,723] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 11:17:09,723] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 11:17:09,724] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 11:17:09,724] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 11:24:39,901] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 11:24:39,904] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 11:24:39,904] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f1c1e5fa810>
[2019-11-19 11:24:39,905] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-19 11:24:39,906] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 11:24:39,907] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 11:24:39,908] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 11:24:39,909] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 11:24:41,398] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 11:24:41,398] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 11:24:41,399] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 11:24:41,399] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 11:24:41,400] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 11:24:41,400] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 11:24:41,401] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 11:26:47,517] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 11:26:47,520] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 11:26:47,521] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f4b11680810>
[2019-11-19 11:26:47,523] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-19 11:26:47,524] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 11:26:47,525] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 11:26:47,526] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 118, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 11:26:47,528] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 141, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 11:26:48,330] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 11:26:48,330] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 11:26:48,331] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 11:26:48,331] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 11:26:48,331] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 11:26:48,332] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 11:26:48,333] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 11:26:53,825] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 11:26:53,826] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 11:26:53,826] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7f0feabb9810>
[2019-11-19 11:26:53,826] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-19 11:26:53,827] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 11:26:53,827] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 11:26:54,328] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 11:26:54,329] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 11:27:05,823] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 11:27:05,827] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 11:27:16,128] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 11:27:16,129] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 11:27:16,130] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 11:27:16,130] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 11:27:16,131] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 11:27:16,132] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 11:27:16,133] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 11:27:20,756] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 11:27:20,757] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 11:27:20,758] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'text.json', mode 'r' at 0x7fa188ffc810>
[2019-11-19 11:27:20,759] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the text.json file
[2019-11-19 11:27:20,760] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 11:27:20,760] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 11:27:21,261] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 11:27:21,262] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 11:29:51,943] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 123, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 11:29:51,946] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:20:39,237] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:20:39,237] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:20:39,238] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:20:39,238] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:20:39,238] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:20:39,238] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:20:39,238] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:22:37,616] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 12:22:37,620] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:22:37,621] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the data.json
Traceback (most recent call last):
  File "newSender.py", line 98, in readJsonFile
    jsonFileObj = open(self.jsonFile,"r")
IOError: [Errno 2] No such file or directory: 'data.json'
[2019-11-19 12:22:37,624] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:22:37,624] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:22:37,625] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 119, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 12:22:37,627] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 142, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 12:22:38,526] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:22:38,526] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:22:38,526] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:22:38,527] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:22:38,527] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:22:38,527] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:22:38,527] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:23:51,793] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 91, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 12:23:51,797] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:23:51,798] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the data.json
Traceback (most recent call last):
  File "newSender.py", line 98, in readJsonFile
    jsonFileObj = open(self.jsonFile,"r")
IOError: [Errno 2] No such file or directory: 'data.json'
[2019-11-19 12:23:51,800] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:23:51,800] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:23:51,801] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 119, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 12:23:51,803] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 142, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 12:23:52,548] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:23:52,548] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:23:52,548] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:23:52,548] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:23:52,549] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:23:52,549] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:23:52,549] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:24:01,662] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:24:01,663] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:24:01,663] : [ERROR] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Failed to load content from the data.json
Traceback (most recent call last):
  File "newSender.py", line 98, in readJsonFile
    jsonFileObj = open(self.jsonFile,"r")
IOError: [Errno 2] No such file or directory: 'data.json'
[2019-11-19 12:24:01,664] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:24:01,664] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:24:02,166] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:24:02,167] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:24:53,071] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:24:53,072] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:25:49,719] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:25:49,719] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:25:49,719] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:25:49,720] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:25:49,720] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:25:49,720] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:25:49,721] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:26:26,415] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:26:26,416] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:26:26,417] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fe473081810>
[2019-11-19 12:26:26,419] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:26:26,420] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:26:26,421] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:26:26,923] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:26:26,923] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:26:43,561] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:26:43,561] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:26:43,561] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:26:43,562] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:26:43,562] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:26:43,562] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:26:43,562] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:26:57,434] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:26:57,435] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:26:57,435] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f34f50dc810>
[2019-11-19 12:26:57,436] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:26:57,436] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:26:57,437] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:26:57,938] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:26:57,938] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:27:10,245] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:27:10,249] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:27:24,287] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:27:24,287] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:27:24,287] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:27:24,288] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:27:24,288] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:27:24,288] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:27:24,288] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:27:29,184] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:27:29,185] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:27:29,186] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fea711df810>
[2019-11-19 12:27:29,187] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:27:29,189] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:27:29,189] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:27:29,691] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:27:29,693] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:28:31,051] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:28:31,053] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:30:38,192] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:30:38,192] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:30:38,193] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:30:38,193] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:30:38,193] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:30:38,193] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:30:38,193] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:30:47,625] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:30:47,627] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:30:47,628] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f40775ab810>
[2019-11-19 12:30:47,629] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:30:47,631] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:30:47,632] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:30:48,134] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:30:48,135] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:30:54,232] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:30:54,233] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:32:19,830] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:32:19,830] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:32:19,830] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f7ff9dd2810>
[2019-11-19 12:32:19,831] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:32:19,831] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:32:19,831] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:32:20,332] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:32:20,333] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:32:31,866] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:32:31,866] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:32:31,866] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:32:31,866] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:32:31,867] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:32:31,867] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:32:31,867] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:32:55,417] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 12:32:55,417] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:32:55,417] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fdabe4b7810>
[2019-11-19 12:32:55,418] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:32:55,418] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:32:55,418] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:32:55,919] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:32:55,921] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:33:59,251] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 124, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:33:59,253] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:33:59,255] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 119, in sendData
    self.clientSocket.send(_serializedData)
  File "<string>", line 5, in send
BluetoothError: (107, 'Transport endpoint is not connected')
[2019-11-19 12:33:59,257] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:36:02,301] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:36:02,301] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:36:02,301] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:36:02,302] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:36:02,302] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:36:02,302] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:36:02,302] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:38:46,694] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 12:38:46,698] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:38:46,699] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f5726c4a8a0>
[2019-11-19 12:38:46,700] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:38:46,701] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:38:46,702] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:38:46,703] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 120, in sendData
    # _serializedData = str(len(_serializedData))+ ":"+_serializedData
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 12:38:46,705] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:38:46,706] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 120, in sendData
    # _serializedData = str(len(_serializedData))+ ":"+_serializedData
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 12:38:46,708] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 143, in closeBluetoothSocket
    def closeBluetoothSocket(self):
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 12:38:47,449] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:38:47,449] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:38:47,449] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:38:47,450] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:38:47,450] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:38:47,450] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:38:47,451] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:39:07,955] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 12:39:07,956] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:39:07,957] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7ff8599e8810>
[2019-11-19 12:39:07,958] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:39:07,959] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:39:07,960] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:39:08,462] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:39:08,463] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:40:12,402] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:40:12,406] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:40:13,970] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:40:13,970] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:40:13,970] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:40:13,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:40:13,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:40:13,971] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:40:13,971] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:42:41,646] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 12:42:41,649] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:42:41,650] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fbdbb494810>
[2019-11-19 12:42:41,651] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:42:41,652] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:42:41,653] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:42:41,654] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 12:42:41,656] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 12:42:42,702] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:42:42,703] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:42:42,703] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:42:42,704] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:42:42,704] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:42:42,704] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:42:42,704] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 12:44:14,236] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A4:50:46:2A:C6:F8', 1)
[2019-11-19 12:44:14,238] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 12:44:14,239] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f5b247f2810>
[2019-11-19 12:44:14,241] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 12:44:14,242] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 12:44:14,243] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 12:44:14,745] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 12:44:14,747] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 12:44:19,617] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 12:44:19,620] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 12:56:15,407] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 12:56:15,407] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 12:56:15,408] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 12:56:15,408] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 12:56:15,408] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 12:56:15,408] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 12:56:15,408] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:17:07,220] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 13:17:07,224] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:17:07,225] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f106d5ba810>
[2019-11-19 13:17:07,226] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:17:07,226] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:17:07,227] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:17:07,228] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 13:17:07,229] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:17:12,209] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:17:12,210] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:27:43,461] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 13:27:43,466] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:27:43,467] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f618a767810>
[2019-11-19 13:27:43,468] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:27:43,469] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:27:43,470] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:27:43,471] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 13:27:43,473] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 13:27:44,139] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:27:44,139] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:27:44,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:27:44,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:27:44,139] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:27:44,140] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:27:44,140] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:27:58,233] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:27:58,234] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:27:58,235] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7ff3d9d5a810>
[2019-11-19 13:27:58,237] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:27:58,238] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:27:58,239] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:27:58,741] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:27:58,742] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:28:24,685] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:28:24,686] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:28:24,686] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:28:24,686] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:28:24,686] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:28:24,687] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:28:24,687] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:32:03,881] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 13:32:03,885] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:32:03,886] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fe64c3c8810>
[2019-11-19 13:32:03,887] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:32:03,888] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:32:03,889] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:32:03,890] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 13:32:03,891] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 13:32:04,461] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:32:04,461] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:32:04,461] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:32:04,462] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:32:04,462] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:32:04,462] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:32:04,463] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:32:40,004] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:32:40,006] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:32:40,007] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f68072fe810>
[2019-11-19 13:32:40,008] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:32:40,011] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:32:40,012] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:32:40,514] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:32:40,515] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:34:11,062] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:34:11,063] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:39:35,589] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 13:39:35,593] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:39:35,594] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fa72d28b810>
[2019-11-19 13:39:35,595] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:39:35,596] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:39:35,597] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:39:35,598] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 13:39:35,599] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 13:39:36,424] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:39:36,425] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:39:36,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:39:36,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:39:36,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:39:36,425] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:39:36,426] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:39:55,571] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:39:55,573] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:39:55,574] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fe65f959810>
[2019-11-19 13:39:55,575] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:39:55,576] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:39:55,577] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:39:56,080] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:39:56,081] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:40:54,047] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 13:40:54,050] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 13:40:56,593] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:40:56,593] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:40:56,593] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:40:56,593] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:40:56,594] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:40:56,594] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:40:56,594] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:41:47,008] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:41:47,009] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:41:47,010] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fe29162a810>
[2019-11-19 13:41:47,011] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:41:47,012] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:41:47,013] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:41:47,514] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:41:47,515] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:42:51,344] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 13:42:51,348] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 13:43:05,801] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:43:05,801] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:43:05,801] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:43:05,801] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:43:05,801] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:43:05,802] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:43:05,802] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:43:35,835] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:43:35,837] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:43:35,838] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f0812180810>
[2019-11-19 13:43:35,840] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:43:35,842] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:43:35,843] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:43:36,345] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:43:36,347] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:44:38,898] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 13:44:38,901] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 13:45:49,944] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:45:49,944] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:45:49,944] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:45:49,944] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:45:49,944] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:45:49,945] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:45:49,945] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:46:46,647] : [ERROR] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Failed to accept bluetooth connection ... 
Traceback (most recent call last):
  File "newSender.py", line 92, in acceptBluetoothConnection
    self.clientSocket, clientInfo = self.serverSocket.accept()
  File "/usr/lib/python2.7/dist-packages/bluetooth/bluez.py", line 129, in accept
    client, addr = self._sock.accept ()
KeyboardInterrupt
[2019-11-19 13:46:46,651] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:46:46,652] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7fefc9826810>
[2019-11-19 13:46:46,654] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:46:46,655] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:46:46,656] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:46:46,657] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 122, in sendData
    self.clientSocket.send(_serializedData)
AttributeError: 'NoneType' object has no attribute 'send'
[2019-11-19 13:46:46,659] : [ERROR] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Failed to close the bluetooth client socket 
Traceback (most recent call last):
  File "newSender.py", line 145, in closeBluetoothSocket
    self.clientSocket.close()
AttributeError: 'NoneType' object has no attribute 'close'
[2019-11-19 13:46:47,222] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:46:47,222] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:46:47,223] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:46:47,223] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:46:47,223] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:46:47,223] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:46:47,224] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:46:58,118] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:46:58,120] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:46:58,121] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7ff30d177810>
[2019-11-19 13:46:58,122] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:46:58,123] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:46:58,124] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:46:58,626] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:46:58,628] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:48:01,215] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 13:48:01,216] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
[2019-11-19 13:48:40,888] : [INFO] : [bleClientLogger] : [newSender.py] : [<module>] : Setup logging configuration
[2019-11-19 13:48:40,888] : [INFO] : [bleClientLogger] : [newSender.py] : [__init__] : serverSocket is None
[2019-11-19 13:48:40,888] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothSocket] : Bluetooth server socket successfully created for RFCOMM service...
[2019-11-19 13:48:40,888] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket bind successfully on host  to PORT_ANY...
[2019-11-19 13:48:40,888] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Bluetooth server socket put to listening mode successfully ...
[2019-11-19 13:48:40,889] : [INFO] : [bleClientLogger] : [newSender.py] : [getBluetoothConnection] : Waiting for connection on RFCOMM channel 1
[2019-11-19 13:48:40,889] : [INFO] : [bleClientLogger] : [newSender.py] : [advertiseBluetoothService] : BluetoothServices advertised successfully ...
[2019-11-19 13:48:57,203] : [INFO] : [bleClientLogger] : [newSender.py] : [acceptBluetoothConnection] : Accepted bluetooth connection from ('A0:10:81:94:F7:07', 1)
[2019-11-19 13:48:57,205] : [INFO] : [bleClientLogger] : [newSender.py] : [send] : Sending data over bluetooth connection
[2019-11-19 13:48:57,206] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : File successfully uploaded to <open file 'data.json', mode 'r' at 0x7f49bfe12810>
[2019-11-19 13:48:57,207] : [INFO] : [bleClientLogger] : [newSender.py] : [readJsonFile] : Content loaded successfully from the data.json file
[2019-11-19 13:48:57,208] : [INFO] : [bleClientLogger] : [newSender.py] : [serializeData] : Object successfully converted to a serialized string
[2019-11-19 13:48:57,209] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection
[2019-11-19 13:48:57,710] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 2
[2019-11-19 13:48:57,712] : [INFO] : [bleClientLogger] : [newSender.py] : [sendData] : Sending data over bluetooth connection 3
[2019-11-19 13:49:24,073] : [ERROR] : [bleClientLogger] : [newSender.py] : [sendData] : Failed to send data over bluetooth connection
Traceback (most recent call last):
  File "newSender.py", line 127, in sendData
    dataRecv= self.clientSocket.recv(1024)
  File "<string>", line 5, in recv
BluetoothError: (104, 'Connection reset by peer')
[2019-11-19 13:49:24,075] : [INFO] : [bleClientLogger] : [newSender.py] : [closeBluetoothSocket] : Bluetooth client socket successfully closed ...
